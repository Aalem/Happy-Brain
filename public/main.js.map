{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/admin/admin-edit/admin-edit.component.css","webpack:///./src/app/components/admin/admin-edit/admin-edit.component.html","webpack:///./src/app/components/admin/admin-edit/admin-edit.component.ts","webpack:///./src/app/components/admin/admin-list/admin-list.component.css","webpack:///./src/app/components/admin/admin-list/admin-list.component.html","webpack:///./src/app/components/admin/admin-list/admin-list.component.ts","webpack:///./src/app/components/admin/admin-register/admin-register.component.css","webpack:///./src/app/components/admin/admin-register/admin-register.component.html","webpack:///./src/app/components/admin/admin-register/admin-register.component.ts","webpack:///./src/app/components/dashboard/dashboard.component.css","webpack:///./src/app/components/dashboard/dashboard.component.html","webpack:///./src/app/components/dashboard/dashboard.component.ts","webpack:///./src/app/components/dashboard/mentor-dashboard/mentor-dashboard/mentor-dashboard.component.css","webpack:///./src/app/components/dashboard/mentor-dashboard/mentor-dashboard/mentor-dashboard.component.html","webpack:///./src/app/components/dashboard/mentor-dashboard/mentor-dashboard/mentor-dashboard.component.ts","webpack:///./src/app/components/dashboard/mentor-dashboard/mentor-dashboard/select-subject/select-subject.component.css","webpack:///./src/app/components/dashboard/mentor-dashboard/mentor-dashboard/select-subject/select-subject.component.html","webpack:///./src/app/components/dashboard/mentor-dashboard/mentor-dashboard/select-subject/select-subject.component.ts","webpack:///./src/app/components/dashboard/student-dashboard/student-dashboard.component.css","webpack:///./src/app/components/dashboard/student-dashboard/student-dashboard.component.html","webpack:///./src/app/components/dashboard/student-dashboard/student-dashboard.component.ts","webpack:///./src/app/components/dashboard/student-dashboard/student-enrollment/student-enrollment.component.css","webpack:///./src/app/components/dashboard/student-dashboard/student-enrollment/student-enrollment.component.html","webpack:///./src/app/components/dashboard/student-dashboard/student-enrollment/student-enrollment.component.ts","webpack:///./src/app/components/login/login.component.css","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/main-nav/main-nav.component.css","webpack:///./src/app/components/main-nav/main-nav.component.html","webpack:///./src/app/components/main-nav/main-nav.component.ts","webpack:///./src/app/components/mentor/mentor-assignment/mentor-assignment.component.css","webpack:///./src/app/components/mentor/mentor-assignment/mentor-assignment.component.html","webpack:///./src/app/components/mentor/mentor-assignment/mentor-assignment.component.ts","webpack:///./src/app/components/mentor/mentor-edit/mentor-edit.component.css","webpack:///./src/app/components/mentor/mentor-edit/mentor-edit.component.html","webpack:///./src/app/components/mentor/mentor-edit/mentor-edit.component.ts","webpack:///./src/app/components/mentor/mentor-list/mentor-list.component.css","webpack:///./src/app/components/mentor/mentor-list/mentor-list.component.html","webpack:///./src/app/components/mentor/mentor-list/mentor-list.component.ts","webpack:///./src/app/components/mentor/register/mentor-register/mentor-register.component.css","webpack:///./src/app/components/mentor/register/mentor-register/mentor-register.component.html","webpack:///./src/app/components/mentor/register/mentor-register/mentor-register.component.ts","webpack:///./src/app/components/mentoring-meeting/create-mentoring-meeting/create-mentoring-meeting.component.css","webpack:///./src/app/components/mentoring-meeting/create-mentoring-meeting/create-mentoring-meeting.component.html","webpack:///./src/app/components/mentoring-meeting/create-mentoring-meeting/create-mentoring-meeting.component.ts","webpack:///./src/app/components/page-not-found/page-not-found.component.css","webpack:///./src/app/components/page-not-found/page-not-found.component.html","webpack:///./src/app/components/page-not-found/page-not-found.component.ts","webpack:///./src/app/components/profile/profile.component.css","webpack:///./src/app/components/profile/profile.component.html","webpack:///./src/app/components/profile/profile.component.ts","webpack:///./src/app/components/resources/local/local-edit/local-edit.component.css","webpack:///./src/app/components/resources/local/local-edit/local-edit.component.html","webpack:///./src/app/components/resources/local/local-edit/local-edit.component.ts","webpack:///./src/app/components/resources/local/local-list/local-list.component.css","webpack:///./src/app/components/resources/local/local-list/local-list.component.html","webpack:///./src/app/components/resources/local/local-list/local-list.component.ts","webpack:///./src/app/components/resources/local/local-register/local-register.component.css","webpack:///./src/app/components/resources/local/local-register/local-register.component.html","webpack:///./src/app/components/resources/local/local-register/local-register.component.ts","webpack:///./src/app/components/resources/online/online-edit/online-edit.component.css","webpack:///./src/app/components/resources/online/online-edit/online-edit.component.html","webpack:///./src/app/components/resources/online/online-edit/online-edit.component.ts","webpack:///./src/app/components/resources/online/online-list/online-list.component.css","webpack:///./src/app/components/resources/online/online-list/online-list.component.html","webpack:///./src/app/components/resources/online/online-list/online-list.component.ts","webpack:///./src/app/components/resources/online/online-register/online-register.component.css","webpack:///./src/app/components/resources/online/online-register/online-register.component.html","webpack:///./src/app/components/resources/online/online-register/online-register.component.ts","webpack:///./src/app/components/star-rating/star-rating.component.css","webpack:///./src/app/components/star-rating/star-rating.component.html","webpack:///./src/app/components/star-rating/star-rating.component.ts","webpack:///./src/app/components/student/register/student-register/student-register.component.css","webpack:///./src/app/components/student/register/student-register/student-register.component.html","webpack:///./src/app/components/student/register/student-register/student-register.component.ts","webpack:///./src/app/components/student/student-edit/student-edit.component.css","webpack:///./src/app/components/student/student-edit/student-edit.component.html","webpack:///./src/app/components/student/student-edit/student-edit.component.ts","webpack:///./src/app/components/student/student-list/student-list.component.css","webpack:///./src/app/components/student/student-list/student-list.component.html","webpack:///./src/app/components/student/student-list/student-list.component.ts","webpack:///./src/app/components/subjects/subject-edit/subject-edit.component.css","webpack:///./src/app/components/subjects/subject-edit/subject-edit.component.html","webpack:///./src/app/components/subjects/subject-edit/subject-edit.component.ts","webpack:///./src/app/components/subjects/subject-list/subject-list.component.css","webpack:///./src/app/components/subjects/subject-list/subject-list.component.html","webpack:///./src/app/components/subjects/subject-list/subject-list.component.ts","webpack:///./src/app/components/subjects/subject-register/subject-register.component.css","webpack:///./src/app/components/subjects/subject-register/subject-register.component.html","webpack:///./src/app/components/subjects/subject-register/subject-register.component.ts","webpack:///./src/app/components/surveys/create-survey/create-survey.component.css","webpack:///./src/app/components/surveys/create-survey/create-survey.component.html","webpack:///./src/app/components/surveys/create-survey/create-survey.component.ts","webpack:///./src/app/data-table/data-table-datasource.ts","webpack:///./src/app/data-table/data-table.component.css","webpack:///./src/app/data-table/data-table.component.html","webpack:///./src/app/data-table/data-table.component.ts","webpack:///./src/app/guards/auth.guard.ts","webpack:///./src/app/guards/login.guard.ts","webpack:///./src/app/guards/role.guard.ts","webpack:///./src/app/services/admin.service.ts","webpack:///./src/app/services/auth.service.ts","webpack:///./src/app/services/local_res/local-res.service.ts","webpack:///./src/app/services/mentor-subject/mentor-subject.service.ts","webpack:///./src/app/services/mentor.service.ts","webpack:///./src/app/services/mentoring-meeting/mentoring-meeting.service.ts","webpack:///./src/app/services/online_res/online-res.service.ts","webpack:///./src/app/services/student-subject/student-subject.service.ts","webpack:///./src/app/services/student.service.ts","webpack:///./src/app/services/subject.service.ts","webpack:///./src/app/services/survey/survey.service.ts","webpack:///./src/app/services/validate.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<!--<app-navbar></app-navbar>-->\\n<main-nav>\\n  <div class=\\\"container-fluid\\\"  style=\\\"margin: 15px\\\">\\n    <div class=\\\"row\\\">\\n      <div *ngIf=\\\"authService.loggedIn(); then withLogin else withOutLogin\\\">\\n\\n      </div>\\n      <ng-template #withOutLogin>\\n        <div  class=\\\"col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-1 main\\\">\\n          <router-outlet></router-outlet>\\n        </div>\\n      </ng-template>\\n\\n      <ng-template #withLogin>\\n        <!--<app-sidebar></app-sidebar>-->\\n\\n        <div class=\\\"col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main\\\">\\n\\n          <router-outlet></router-outlet>\\n\\n        </div>\\n      </ng-template>\\n\\n\\n    </div>\\n\\n\\n  </div>\\n</main-nav>\\n\\n\\n<!--<footer  class=\\\"col-sm-9 col-sm-offset-3 col-md-10 col-md-offset-2 main\\\">-->\\n  <!--<flash-messages></flash-messages>-->\\n<!--</footer>-->\\n\\n\"","import {Component, ElementRef, OnInit} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {AuthService} from \"./services/auth.service\";\n\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n    title = 'app';\n\n    constructor(private router: Router,\n                private authService: AuthService) {\n\n    }\n    name = 'Angular 4';\n    private _opened: boolean = true;\n\n    private _toggleSidebar() {\n        this._opened = !this._opened;\n    }\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {RouterModule, Routes} from '@angular/router';\nimport {AppComponent} from './app.component';\nimport {LoginComponent} from './components/login/login.component';\nimport {DashboardComponent} from './components/dashboard/dashboard.component';\nimport {ProfileComponent} from './components/profile/profile.component';\n\nimport {ValidateService} from './services/validate.service';\nimport {AuthService} from './services/auth.service';\nimport {FlashMessagesModule} from 'angular2-flash-messages';\nimport {AuthGuard} from './guards/auth.guard';\nimport {HttpClientModule} from '@angular/common/http';\nimport {StudentRegisterComponent} from './components/student/register/student-register/student-register.component';\nimport {MentorRegisterComponent} from './components/mentor/register/mentor-register/mentor-register.component';\n\nimport {DataTableComponent} from './data-table/data-table.component';\nimport {AdminRegisterComponent} from './components/admin/admin-register/admin-register.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {AdminListComponent} from './components/admin/admin-list/admin-list.component';\nimport {AdminEditComponent} from './components/admin/admin-edit/admin-edit.component';\nimport {StudentListComponent} from './components/student/student-list/student-list.component';\nimport {StudentEditComponent} from './components/student/student-edit/student-edit.component';\nimport {MentorListComponent} from './components/mentor/mentor-list/mentor-list.component';\nimport {MentorEditComponent} from './components/mentor/mentor-edit/mentor-edit.component';\nimport {SubjectRegisterComponent} from './components/subjects/subject-register/subject-register.component';\nimport {SubjectListComponent} from './components/subjects/subject-list/subject-list.component';\nimport {SubjectEditComponent} from './components/subjects/subject-edit/subject-edit.component';\nimport {OnlineRegisterComponent} from './components/resources/online/online-register/online-register.component';\nimport {OnlineEditComponent} from './components/resources/online/online-edit/online-edit.component';\nimport {OnlineListComponent} from './components/resources/online/online-list/online-list.component';\nimport {LocalRegisterComponent} from './components/resources/local/local-register/local-register.component';\nimport {LocalEditComponent} from './components/resources/local/local-edit/local-edit.component';\nimport {LocalListComponent} from './components/resources/local/local-list/local-list.component';\nimport {FileUploadModule} from 'ng2-file-upload';\nimport {JwtModule} from '@auth0/angular-jwt';\nimport {RoleGuard} from './guards/role.guard';\nimport {LoginGuard} from './guards/login.guard';\nimport {StudentDashboardComponent} from './components/dashboard/student-dashboard/student-dashboard.component';\nimport {StudentEnrollmentComponent} from './components/dashboard/student-dashboard/student-enrollment/student-enrollment.component';\nimport {MentorDashboardComponent} from './components/dashboard/mentor-dashboard/mentor-dashboard/mentor-dashboard.component';\nimport {SelectSubjectComponent} from './components/dashboard/mentor-dashboard/mentor-dashboard/select-subject/select-subject.component';\nimport {MentorAssignmentComponent} from './components/mentor/mentor-assignment/mentor-assignment.component';\nimport {MainNavComponent} from './components/main-nav/main-nav.component';\nimport {LayoutModule} from '@angular/cdk/layout';\n\nimport {\n    MatToolbarModule, MatButtonModule, MatSidenavModule, MatIconModule, MatListModule,\n    MatMenu, MatMenuModule, MatFormFieldModule, MatOptionModule, MatSelectModule, MatFormFieldControl, MatInputModule,\n    MatRadioModule, MatCheckboxModule, MatSnackBarModule, MatTableModule, MatPaginatorModule, MatSortModule,\n    MatDatepickerModule, MatNativeDateModule, MatExpansionModule, MatStepperModule, MatTooltipModule,\n    MatProgressBarModule, MatDialogModule\n} from '@angular/material';\nimport { PageNotFoundComponent } from './components/page-not-found/page-not-found.component';\nimport { CreateMentoringMeetingComponent } from './components/mentoring-meeting/create-mentoring-meeting/create-mentoring-meeting.component';\nimport { CreateSurveyComponent } from './components/surveys/create-survey/create-survey.component';\nimport { StarRatingComponent } from './components/star-rating/star-rating.component';\n\n\n\nconst appRoutes: Routes = [\n    {path: '', component: LoginComponent, canActivate: [LoginGuard]},\n    {path: 'student-register', component: StudentRegisterComponent, canActivate: [LoginGuard]},\n    {path: 'mentor-register', component: MentorRegisterComponent, canActivate: [LoginGuard]},\n    {path: 'login', component: LoginComponent, canActivate: [LoginGuard]},\n    {path: 'dashboard', component: DashboardComponent, canActivate: [RoleGuard], data: {expectedRole: 'admin'}},\n    {path: 'profile', component: ProfileComponent, canActivate: [AuthGuard]},\n    {path: 'admin-register', component: AdminRegisterComponent, canActivate: [RoleGuard], data: {expectedRole: 'admin'}},\n    {path: 'admin-list', component: AdminListComponent, canActivate: [RoleGuard], data: {expectedRole: 'admin'}},\n    {path: 'admin-list/:id', component: AdminListComponent, canActivate: [RoleGuard], data: {expectedRole: 'admin'}},\n    {path: 'admin-edit/:id', component: AdminEditComponent, canActivate: [RoleGuard], data: {expectedRole: 'admin'}},\n    {path: 'student-list', component: StudentListComponent, canActivate: [RoleGuard], data: {expectedRole: 'admin'}},\n    {path: 'student-list/:id', component: StudentListComponent, canActivate: [RoleGuard], data: {expectedRole: 'admin'}},\n    {path: 'student-edit/:id', component: StudentEditComponent, canActivate: [RoleGuard], data: {expectedRole: 'admin'}},\n    {path: 'mentor-list', component: MentorListComponent, canActivate: [RoleGuard], data: {expectedRole: 'admin'}},\n    {path: 'mentor-list/:id', component: MentorListComponent, canActivate: [RoleGuard], data: {expectedRole: 'admin'}},\n    {path: 'mentor-edit/:id', component: MentorEditComponent, canActivate: [RoleGuard], data: {expectedRole: 'admin'}},\n    {path: 'subject-edit/:id', component: SubjectEditComponent, canActivate: [RoleGuard], data: {expectedRole: 'admin'}},\n    {path: 'subject-list/:id', component: SubjectListComponent, canActivate: [RoleGuard], data: {expectedRole: 'admin'}},\n    {path: 'subject-list', component: SubjectListComponent, canActivate: [RoleGuard], data: {expectedRole: 'admin'}},\n    {path: 'subject-register', component: SubjectRegisterComponent, canActivate: [RoleGuard], data: {expectedRole: 'admin'}},\n    {path: 'online-register', component: OnlineRegisterComponent, canActivate: [RoleGuard], data: {expectedRole: 'admin'}},\n    {path: 'online-edit/:id', component: OnlineEditComponent, canActivate: [RoleGuard], data: {expectedRole: 'admin'}},\n    {path: 'online-list/:id', component: OnlineListComponent, canActivate: [RoleGuard], data: {expectedRole: 'admin'}},\n    {path: 'online-list', component: OnlineListComponent, canActivate: [AuthGuard]},\n    {path: 'local-register', component: LocalRegisterComponent, canActivate: [RoleGuard], data: {expectedRole: 'admin'}},\n    {path: 'local-edit/:id', component: LocalEditComponent, canActivate: [RoleGuard], data: {expectedRole: 'admin'}},\n    {path: 'local-list/:id', component: LocalListComponent, canActivate: [RoleGuard], data: {expectedRole: 'admin'}},\n    {path: 'local-list', component: LocalListComponent, canActivate: [AuthGuard]},\n    {path: 'student-dashboard/:id', component: StudentDashboardComponent, canActivate: [RoleGuard], data: {expectedRole: 'student'}},\n    {path: 'student-dashboard', component: StudentDashboardComponent, canActivate: [RoleGuard], data: {expectedRole: 'student'}},\n    {path: 'student-enrollment', component: StudentEnrollmentComponent, canActivate: [RoleGuard], data: {expectedRole: 'student'}},\n    {path: 'mentor-dashboard', component: MentorDashboardComponent, canActivate: [RoleGuard], data: {expectedRole: 'mentor'}},\n    {path: 'mentor-assignment', component: MentorAssignmentComponent, canActivate: [RoleGuard], data: {expectedRole: 'admin'}},\n    {path: 'select-subject', component: SelectSubjectComponent, canActivate: [RoleGuard], data: {expectedRole: 'mentor'}},\n    {path: 'select-subject/:id', component: SelectSubjectComponent, canActivate: [RoleGuard], data: {expectedRole: 'mentor'}},\n    {path: 'create-mentoring-meeting/:id', component: CreateMentoringMeetingComponent, canActivate: [RoleGuard], data: {expectedRole: 'mentor'}},\n    {path: 'create-survey/:id', component: CreateSurveyComponent, canActivate: [RoleGuard], data: {expectedRole: 'student'}},\n    {path: 'page-not-found', component: PageNotFoundComponent}];\n\nexport function tokenGetter() {\n    return localStorage.getItem('id_token');\n}\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        LoginComponent,\n        DashboardComponent,\n        ProfileComponent,\n        StudentRegisterComponent,\n        MentorRegisterComponent,\n        AdminRegisterComponent,\n        DataTableComponent,\n        AdminListComponent,\n        AdminEditComponent,\n        StudentListComponent,\n        StudentEditComponent,\n        MentorListComponent,\n        MentorEditComponent,\n        SubjectRegisterComponent,\n        SubjectListComponent,\n        SubjectEditComponent,\n        OnlineRegisterComponent,\n        OnlineEditComponent,\n        OnlineListComponent,\n        LocalRegisterComponent,\n        LocalEditComponent,\n        LocalListComponent,\n        StudentDashboardComponent,\n        StudentEnrollmentComponent,\n        MentorDashboardComponent,\n        SelectSubjectComponent,\n        MentorAssignmentComponent,\n        MainNavComponent,\n        PageNotFoundComponent,\n        CreateMentoringMeetingComponent,\n        CreateSurveyComponent,\n        StarRatingComponent,\n    ],\n    imports: [\n        BrowserModule,\n        FormsModule,\n        HttpClientModule,\n        RouterModule.forRoot(appRoutes),\n        FlashMessagesModule.forRoot(),\n        BrowserAnimationsModule,\n        FileUploadModule,\n        LayoutModule,\n        MatInputModule,\n        MatToolbarModule,\n        MatButtonModule,\n        MatSidenavModule,\n        MatIconModule,\n        MatListModule,\n        MatMenuModule,\n        MatFormFieldModule,\n        MatOptionModule,\n        MatSelectModule,\n        MatRadioModule,\n        MatCheckboxModule,\n        MatSnackBarModule,\n        MatSortModule,\n        MatTableModule,\n        MatDatepickerModule,\n        MatNativeDateModule,\n        MatPaginatorModule,\n        MatStepperModule,\n        ReactiveFormsModule,\n        MatExpansionModule,\n        MatTooltipModule,\n        MatDialogModule,\n        MatProgressBarModule,\n        JwtModule.forRoot({\n            config: {\n                tokenGetter: tokenGetter,\n                whitelistedDomains: ['localhost:3000'],\n                blacklistedRoutes: ['localhost:3000/auth/']\n            }\n        })\n    ],\n    providers: [ValidateService, AuthService, AuthGuard, RoleGuard, LoginGuard],\n    bootstrap: [AppComponent]\n})\n\nexport class AppModule {\n}\n","module.exports = \"\"","module.exports = \"<h2 class=\\\"page-header\\\">Edit Admin</h2>\\n\\n<form class=\\\"example-form\\\" (submit)=\\\"updateAdmin(admin._id)\\\" #formList=\\\"ngForm\\\">\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Name\\\" [(ngModel)]=\\\"admin.name\\\" name=\\\"name\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n        <input matInput type=\\\"email\\\" placeholder=\\\"Email Address\\\" [(ngModel)]=\\\"admin.email\\\" name=\\\"email\\\">\\n    </mat-form-field>\\n\\n    <!--<mat-form-field class=\\\"example-full-width\\\">-->\\n        <!--<input matInput type=\\\"password\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"admin.password\\\" name=\\\"password\\\"-->\\n               <!--autocomplete=\\\"true\\\">-->\\n    <!--</mat-form-field>-->\\n\\n    <br/>\\n    <br/>\\n    <br/>\\n\\n    <div class=\\\"button-row\\\">\\n        <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Save</button>\\n        <button style=\\\"margin-left: 10px\\\" mat-raised-button color=\\\"warn\\\" [routerLink]=\\\"['/admin-list']\\\" >Cancel</button>\\n    </div>\\n    <br/>\\n    <br/>\\n    <br/>\\n\\n</form>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {AdminService} from '../../../services/admin.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {MatSnackBar} from '@angular/material';\n\n@Component({\n    selector: 'app-admin-edit',\n    templateUrl: './admin-edit.component.html',\n    styleUrls: ['./admin-edit.component.css']\n})\nexport class AdminEditComponent implements OnInit {\n    admin = {};\n\n    constructor(private  adminService: AdminService,\n                private route: Router,\n                private activatedRoute: ActivatedRoute,\n                private snackBar: MatSnackBar) {\n    }\n\n    ngOnInit() {\n        this.getAdmin(this.activatedRoute.snapshot.params['id']);\n    }\n\n    getAdmin(id) {\n        this.adminService.getAdmin(id).then((res) => {\n            this.admin = res;\n        }, (err) => {\n            console.log(err);\n        });\n    }\n\n    updateAdmin(id) {\n        this.adminService.editAdmin(id, this.admin).then((result) => {\n            this.route.navigate(['/admin-list']);\n            this.snackBar.open('User updated!', null, {duration: 1500});\n        }, (err) => {\n            console.log(err);\n        });\n    }\n\n\n}\n","module.exports = \"\"","module.exports = \"<h1 class=\\\"mat-h1\\\">System Admins</h1>\\n<div class=\\\"button-row\\\">\\n    <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/admin-register']\\\" style=\\\"float:right;\\\">New Admin</button>\\n</div>\\n\\n<mat-form-field>\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n</mat-form-field>\\n\\n<div class=\\\"mat-elevation-z8\\\">\\n    <table *ngIf=\\\"true\\\" mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n        <!-- Number Column -->\\n        <ng-container matColumnDef=\\\"id\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> No.</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.id}}</td>\\n        </ng-container>\\n\\n        <!-- Name Column -->\\n        <ng-container matColumnDef=\\\"name\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Name</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.name}}</td>\\n        </ng-container>\\n\\n        <!-- Email Column -->\\n        <ng-container matColumnDef=\\\"email\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Email</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.email}}</td>\\n        </ng-container>\\n\\n        <!-- Edit Column -->\\n        <ng-container matColumnDef=\\\"edit\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Edit</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\"> <a [routerLink]=\\\"['/admin-edit', row._id]\\\">\\n                <mat-icon style=\\\"color: darkgreen\\\">edit</mat-icon>\\n            </a>\\n\\n            </td>\\n        </ng-container>\\n\\n        <!-- Delete Column -->\\n        <ng-container matColumnDef=\\\"delete\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Delete</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\"><a (click)=\\\"deleteAdmin(row._id)\\\" >\\n                <mat-icon style=\\\"color: red\\\">delete</mat-icon>\\n            </a>\\n\\n            </td>\\n        </ng-container>\\n\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n        </tr>\\n    </table>\\n\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 100]\\\"></mat-paginator>\\n</div>\\n\"","import {AdminService} from '../../../services/admin.service';\nimport {Router} from '@angular/router';\n\nimport {Component,  ViewChild} from '@angular/core';\nimport {MatPaginator, MatSnackBar, MatSort, MatTableDataSource} from '@angular/material';\n\n@Component({\n    selector: 'app-admin-list',\n    templateUrl: './admin-list.component.html',\n    styleUrls: ['./admin-list.component.css']\n})\nexport class AdminListComponent  {\n    displayedColumns: string[] = ['id', 'name', 'email', 'edit', 'delete'];\n    dataSource: MatTableDataSource<Object>;\n    admins: any;\n    users: any;\n    isDataLoaded: boolean;\n\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n    @ViewChild(MatSort) sort: MatSort;\n    i = 0;\n\n    constructor(private adminService: AdminService,\n                private router: Router,\n                private snackBar: MatSnackBar) {\n\n        this.isDataLoaded = false;\n        this.admins = [];\n        this.adminService.getAdmins()\n            .subscribe(admins => {\n                this.admins = admins;\n\n                this.users = [];\n                for (this.i = 0; this.i < this.admins.length; this.i++) {\n                    this.users.push({\n                        id: this.i + 1,\n                        _id: this.admins[this.i]._id,\n                        name: this.admins[this.i].name,\n                        email: this.admins[this.i].email\n                    });\n                }\n                this.dataSource = new MatTableDataSource(this.users);\n                this.dataSource.paginator = this.paginator;\n                this.dataSource.sort = this.sort;\n            });\n    }\n\n    applyFilter(filterValue: string) {\n        this.dataSource.filter = filterValue.trim().toLowerCase();\n\n        if (this.dataSource.paginator) {\n            this.dataSource.paginator.firstPage();\n        }\n    }\n\n    deleteAdmin(id) {\n        this.adminService.deleteAdmin(id).then((result) => {\n            this.router.navigate(['/admin-list']);\n            this.snackBar.open('User deleted!', 'Dimiss', {duration: 2000});\n        }, (err) => {\n            console.log(err);\n        });\n\n    }\n\n}\n\n","module.exports = \"\"","module.exports = \"<h2 class=\\\"mat-h1\\\">Admin Registration</h2>\\n\\n<form (submit)=\\\"onRegisterSubmit(formList)\\\" #formList=\\\"ngForm\\\" class=\\\"example-form\\\">\\n\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Name\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n        <input matInput type=\\\"email\\\" placeholder=\\\"Email Address\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\">\\n    </mat-form-field>\\n\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n        <input matInput type=\\\"password\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\"\\n               autocomplete=\\\"true\\\">\\n    </mat-form-field>\\n\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n        <input matInput type=\\\"password\\\" placeholder=\\\"Confirm Password\\\" [(ngModel)]=\\\"confirmPassword\\\"\\n               name=\\\"confirmPassword\\\" autocomplete=\\\"true\\\">\\n    </mat-form-field>\\n\\n    <br/>\\n    <br/>\\n\\n    <div class=\\\"button-row\\\">\\n        <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Save</button>\\n        <button mat-raised-button color=\\\"warn\\\" style=\\\"margin: 10px;\\\" [routerLink]=\\\"['/admin-list']\\\">Cancel</button>\\n    </div>\\n    <br/>\\n    <br/>\\n    <br/>\\n\\n</form>\"","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {ValidateService} from '../../../services/validate.service';\nimport {AdminService} from '../../../services/admin.service';\nimport {MatSnackBar} from '@angular/material';\n\n@Component({\n    selector: 'app-admin-register',\n    templateUrl: './admin-register.component.html',\n    styleUrls: ['./admin-register.component.css']\n})\nexport class AdminRegisterComponent {\n    name: String;\n    email: String;\n    password: String;\n    confirmPassword: String;\n\n    constructor(private router: Router,\n                private adminService: AdminService,\n                private validateService: ValidateService,\n                private snackBar: MatSnackBar) {\n    }\n\n    onRegisterSubmit(formList: any) {\n        const admin = {\n            name: this.name,\n            email: this.email,\n            password: this.password\n        };\n\n\n        if (!this.validateService.validateRegister(admin)) {\n            return false;\n        }\n\n        // Validate Email\n        if (!this.validateService.validateEmail(admin.email)) {\n            return false;\n        }\n        // Match password\n        if (this.password !== this.confirmPassword) {\n            return false;\n\n        }\n        this.adminService.registerAdmin(admin).subscribe(data => {\n            if (data['success']) {\n                this.snackBar.open('New admin is added!', 'Dismiss', {duration: 2000});\n                this.router.navigate(['/admin-list']);\n            } else {\n                this.snackBar.open('Something went wrong', 'Dismiss', {duration: 2000});\n            }\n        });\n    }\n}\n","module.exports = \"\"","module.exports = \"\\n<h2 class=\\\"mat-h1\\\">Students waiting to be assigned a mentor</h2>\\n\\n<div *ngIf=\\\"hasStudents\\\">\\n    <mat-form-field >\\n        <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n    </mat-form-field>\\n\\n    <div class=\\\"mat-elevation-z8\\\" >\\n        <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n            <!-- Number Column -->\\n            <ng-container matColumnDef=\\\"id\\\" >\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header > No.</th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.id+1}}</td>\\n            </ng-container>\\n\\n            <!-- Name Column -->\\n            <ng-container matColumnDef=\\\"name\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Name</th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.name}}</td>\\n            </ng-container>\\n\\n            <!-- Phone Column -->\\n            <ng-container matColumnDef=\\\"phone\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Phone</th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.phone}}</td>\\n            </ng-container>\\n            <!-- Country Column -->\\n            <ng-container matColumnDef=\\\"country\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Country</th>\\n                <td mat-cell *matCellDef=\\\"let row\\\"> {{row.country}}</td>\\n            </ng-container>\\n            <!-- Subject Column -->\\n            <ng-container matColumnDef=\\\"subject\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Subject </th>\\n                <td mat-cell *matCellDef=\\\"let row\\\">{{row.subject_name}}</td>\\n            </ng-container>\\n\\n            <!-- Delete Column -->\\n            <ng-container matColumnDef=\\\"assign\\\">\\n                <th mat-header-cell *matHeaderCellDef mat-sort-header> Assign Mentor</th>\\n                <td mat-cell *matCellDef=\\\"let row\\\">\\n                    <button mat-button color=\\\"primary\\\" (click)=\\\"assignMentor(row.id)\\\">Assign</button>\\n                </td>\\n            </ng-container>\\n\\n            <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n            <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n            </tr>\\n        </table>\\n\\n\\n        <mat-paginator [pageSizeOptions]=\\\"[10, 25, 100]\\\"></mat-paginator>\\n    </div>\\n</div>\\n\\n\\n<mat-label *ngIf=\\\"!hasStudents\\\"><i>There are no students waiting to be assigned a mentor!</i></mat-label>\"","import {StudentSubjectService} from '../../services/student-subject/student-subject.service';\nimport {Router} from '@angular/router';\n\nimport {Component, ViewChild} from '@angular/core';\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\n\n@Component({\n    selector: 'app-dashboard',\n    templateUrl: './dashboard.component.html',\n    styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent {\n    displayedColumns: string[] = ['id', 'name', 'phone', 'country', 'subject', 'assign'];\n    dataSource: MatTableDataSource<Object>;\n\n    subjectsArray: any;\n    hasStudents: boolean;\n\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n    @ViewChild(MatSort) sort: MatSort;\n\n    constructor(private router: Router,\n                private studentSubjectService: StudentSubjectService) {\n        this.hasStudents = true;\n        this.subjectsArray = [];\n        this.studentSubjectService.getUnassignedStudentSubjects()\n            .subscribe(data => {\n                if (data['length'] == 0) {\n                    this.hasStudents = false;\n                }\n                for (const index in data) {\n                    this.subjectsArray.push({\n                        id: Number(index),\n                        _id: data[index]._id,\n                        name: data[index].student['length'] !== 0 ? data[index].student[0].name : '',\n                        phone: data[index].student['length'] !== 0 ? data[index].student[0].phone : '',\n                        country: data[index].student['length'] !== 0 ? data[index].student[0].country : '',\n                        subject_name: data[index].subject['length'] !== 0 ? data[index].subject[0].name : '',\n                        subject: data[index].subject['length'] !== 0 ? data[index].subject[0] : '',\n                        student: data[index].student['length'] !== 0 ? data[index].student[0] : '',\n                    });\n                }\n                this.dataSource = new MatTableDataSource(this.subjectsArray);\n                this.dataSource.paginator = this.paginator;\n                this.dataSource.sort = this.sort;\n            });\n    }\n\n    applyFilter(filterValue: string) {\n        this.dataSource.filter = filterValue.trim().toLowerCase();\n\n        if (this.dataSource.paginator) {\n            this.dataSource.paginator.firstPage();\n        }\n    }\n\n    assignMentor(data: number) {\n        localStorage.setItem('assignment_data', JSON.stringify(this.subjectsArray[data]));\n        this.router.navigate(['/mentor-assignment']);\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<h1 class=\\\"mat-h1\\\">Your Classes</h1>\\n<!--<div class=\\\"button-row\\\">-->\\n    <!--<button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/select-subject']\\\" style=\\\"float:right;\\\">Select Your Subjects</button>-->\\n<!--</div>-->\\n\\n<mat-form-field>\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n</mat-form-field>\\n\\n<div class=\\\"mat-elevation-z8 \\\">\\n    <table *ngIf=\\\"true\\\"  mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n        <!-- Number Column -->\\n        <ng-container matColumnDef=\\\"id\\\" >\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header > No.</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.id+1}}</td>\\n        </ng-container>\\n\\n        <!-- Name Column -->\\n        <ng-container matColumnDef=\\\"subject\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Subject</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.subject}}</td>\\n        </ng-container>\\n\\n        <!-- Phone Column -->\\n        <ng-container matColumnDef=\\\"student\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Student</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.student}}</td>\\n        </ng-container>\\n        <!-- Country Column -->\\n        <ng-container matColumnDef=\\\"start_date\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Start Date</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.start_date}}</td>\\n        </ng-container>\\n        <!-- Subject Column -->\\n        <ng-container matColumnDef=\\\"end_date\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>End Date</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\">{{row.end_date}}</td>\\n        </ng-container>\\n        <!--Progress Column-->\\n        <ng-container matColumnDef=\\\"progress\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Progress</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\">\\n                {{row.progress}} %\\n                <mat-progress-bar\\n                        class=\\\"example-margin\\\"\\n                        color=\\\"primary\\\"\\n                        mode=\\\"determinate\\\"\\n                        value=\\\"{{row.progress}}\\\"\\n                        bufferValue=\\\"75\\\">\\n                </mat-progress-bar>\\n            </td>\\n        </ng-container>\\n        <!-- Delete Column -->\\n        <ng-container matColumnDef=\\\"mentoring_meeting\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Mentoring Meeting</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\">\\n                <button mat-button color=\\\"primary\\\" [routerLink]=\\\"['/create-mentoring-meeting', row._id]\\\">Write</button>\\n            </td>\\n        </ng-container>\\n\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n        </tr>\\n    </table>\\n\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 100]\\\"></mat-paginator>\\n</div>\\n\"","import {StudentSubjectService} from '../../../../services/student-subject/student-subject.service';\nimport {Router} from '@angular/router';\n\nimport {Component, ViewChild} from '@angular/core';\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\n\n\n@Component({\n    selector: 'app-mentor-dashboard',\n    templateUrl: './mentor-dashboard.component.html',\n    styleUrls: ['./mentor-dashboard.component.css']\n})\nexport class MentorDashboardComponent {\n    subjectsArray: any;\n\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n    @ViewChild(MatSort) sort: MatSort;\n\n    displayedColumns: string[] = ['id', 'subject', 'student', 'start_date', 'end_date', 'progress', 'mentoring_meeting'];\n    dataSource: MatTableDataSource<Object>;\n\n    constructor(private studentSubjectService: StudentSubjectService,\n                private router: Router) {\n        const userTypeToken = JSON.parse(localStorage.getItem('user'));\n        this.subjectsArray = [];\n\n        this.studentSubjectService.getStudentSubjectsByMentorId('/' + userTypeToken.id)\n            .subscribe(data => {\n                for (const index in data) {\n                    this.subjectsArray.push({\n                        id: Number(index),\n                        _id: data[index]._id,\n                        student: data[index].student['length'] !== 0 ? data[index].student[0].name : '',\n                        subject: data[index].subject['length'] !== 0 ? data[index].subject[0].name : '',\n                        start_date: data[index].start_date,\n                        end_date: data[index].end_date,\n                        progress: data[index].mentoringmeeting['length'] !== 0 ?\n                            Math.round((data[index].mentoringmeeting[0].section / data[index].subject[0].sections) * 100) : '0',\n                    });\n                }\n                this.dataSource = new MatTableDataSource(this.subjectsArray);\n                this.dataSource.paginator = this.paginator;\n                this.dataSource.sort = this.sort;\n            });\n\n    }\n\n    applyFilter(filterValue: string) {\n        this.dataSource.filter = filterValue.trim().toLowerCase();\n\n        if (this.dataSource.paginator) {\n            this.dataSource.paginator.firstPage();\n        }\n    }\n\n\n}\n","module.exports = \"\"","module.exports = \"<h1 class=\\\"mat-h1\\\">Select the subjects you are willing to teach</h1>\\n<hr />\\n<br/>\\n\\n\\n<table mat-table [dataSource]=\\\"dataSource\\\" class=\\\"mat-elevation-z8\\\">\\n\\n    <!-- Position Column -->\\n    <ng-container matColumnDef=\\\"position\\\">\\n        <th mat-header-cell *matHeaderCellDef> No. </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.position+1}} </td>\\n    </ng-container>\\n\\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"name\\\">\\n        <th mat-header-cell *matHeaderCellDef> Name </th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.name}} </td>\\n    </ng-container>\\n\\n    <!-- Checkbox Column -->\\n    <ng-container matColumnDef=\\\"select\\\">\\n        <th mat-header-cell *matHeaderCellDef> Select</th>\\n        <td mat-cell *matCellDef=\\\"let row\\\">\\n            <mat-checkbox [disabled]=\\\"row.checked\\\"\\n                          (change)=\\\"toggle(row)\\\"\\n                          [checked]=\\\"row.checked\\\">\\n            </mat-checkbox>\\n        </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"\\n        (click)=\\\"selection.toggle(row)\\\">\\n    </tr>\\n</table>\\n<br/>\\n<div class=\\\"button-row\\\">\\n    <button mat-raised-button color=\\\"primary\\\" disabled=\\\"{{!enableSaveButton}}\\\" (click)=\\\"onRegisterSubmit()\\\" style=\\\"float:right;\\\">Save</button>\\n</div>\"","import {SubjectService} from '../../../../../services/subject.service';\nimport {MentorSubjectService} from '../../../../../services/mentor-subject/mentor-subject.service';\nimport {SelectionModel} from '@angular/cdk/collections';\nimport {Component} from '@angular/core';\nimport {MatSnackBar, MatTableDataSource} from '@angular/material';\n\n\n@Component({\n    selector: 'app-select-subject',\n    templateUrl: './select-subject.component.html',\n    styleUrls: ['./select-subject.component.css']\n})\n\nexport class SelectSubjectComponent {\n    displayedColumns: string[] = [ 'position', 'name', 'select'];\n    dataSource: MatTableDataSource<Object>;\n    selection = new SelectionModel(true, []);\n    alreadyHasSubjects: boolean;\n    selectedSubjects: any;\n\n    subjects: any;\n    mentor_subject_id: any;\n    mentor_subjects: any;\n    mentor_id: String;\n\n    subjects_id: any;\n    i = 0;\n    j = 0;\n\n    enableSaveButton: boolean;\n\n    constructor(private subjectService: SubjectService,\n                private mentorSubjectService: MentorSubjectService,\n                private snackBar: MatSnackBar) {\n        this.enableSaveButton = false;\n        this.alreadyHasSubjects = false;\n        this.selectedSubjects = [];\n        this.mentor_id = JSON.parse(localStorage.getItem('user')).id;\n        this.mentor_subjects = [];\n        this.mentorSubjectService.getMentorSubjects(this.mentor_id).subscribe(data => {\n            if (data['length'] !== 0) {\n                this.mentor_subjects = data[0].subjects;\n                this.mentor_subject_id = data[0]._id;\n            }\n            // console.log(data);\n\n        });\n\n        this.subjectService.getSubjects().subscribe(data => {\n            this.subjects = [];\n            for (this.i = 0; this.i < data['length']; this.i++) {\n                this.subjects.push({\n                    id: data[this.i]._id,\n                    position: this.i,\n                    name: data[this.i].name,\n                    checked: false\n                });\n                if (this.mentor_subjects.length !== 0) {\n                    for (this.j = 0; this.j < this.mentor_subjects.length; this.j++) {\n                        if (data[this.i]._id === this.mentor_subjects[this.j]) {\n                            this.subjects[this.i].checked = true;\n                            this.alreadyHasSubjects = true;\n                        }\n                    }\n                }\n            }\n            this.dataSource = new MatTableDataSource(this.subjects);\n        });\n    }\n\n    /** Whether the number of selected elements matches the total number of rows. */\n    isAllSelected() {\n        const numSelected = this.selection.selected.length;\n        const numRows = this.dataSource.data.length;\n        return numSelected === numRows;\n    }\n\n    /** Selects all rows if they are not all selected; otherwise clear selection. */\n    masterToggle() {\n        this.isAllSelected() ?\n            this.selection.clear() :\n            this.dataSource.data.forEach(row => this.selection.select(row));\n    }\n\n    toggle(row) {\n        if (!this.subjects[row.position].checked) {\n            this.subjects[row.position].checked = true;\n        } else {\n            this.subjects[row.position].checked = false;\n        }\n        this.enableSaveButton = true;\n    }\n\n    onRegisterSubmit() {\n        this.subjects_id = [];\n        for (const index in this.subjects) {\n            if (this.subjects[index].checked) {\n                this.subjects_id.push(this.subjects[index].id);\n            }\n        }\n        const mentor_selected_subject = {\n            mentor_id: this.mentor_id,\n            subjects: this.subjects_id\n        };\n        if (this.alreadyHasSubjects) {\n            console.log(this.mentor_subject_id);\n            this.mentorSubjectService.editMentorSubject(this.mentor_subject_id, mentor_selected_subject);\n        } else {\n            this.mentorSubjectService.registerMentorSubject(mentor_selected_subject).subscribe(data => {\n                if (data['success']) {\n                    this.snackBar.open('Subjects selected!', null, {duration: 1500});\n                    // this.router.navigate(['/mentor-dashboard']);\n                } else {\n                    this.snackBar.open('Something went wrong!', 'Dismiss', {duration: 2000});\n                }\n            });\n        }\n    }\n}\n","module.exports = \"\"","module.exports = \"<h1 class=\\\"mat-h1\\\">Your Classes</h1>\\n<div class=\\\"button-row\\\">\\n    <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/student-enrollment']\\\" style=\\\"float:right;\\\">New Enrollment</button>\\n</div>\\n\\n<mat-form-field>\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n</mat-form-field>\\n\\n<div class=\\\"mat-elevation-z8 \\\">\\n    <table  mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n        <!-- Number Column -->\\n        <ng-container matColumnDef=\\\"id\\\" >\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header >No.</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.id}}</td>\\n        </ng-container>\\n\\n        <!-- Name Column -->\\n        <ng-container matColumnDef=\\\"subject\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Subject</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.subject}}</td>\\n        </ng-container>\\n\\n        <!-- Phone Column -->\\n        <ng-container matColumnDef=\\\"mentor\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Mentor</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.mentor}}</td>\\n        </ng-container>\\n        <!-- Country Column -->\\n        <ng-container matColumnDef=\\\"start_date\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Start Date</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.start_date}}</td>\\n        </ng-container>\\n        <!-- Subject Column -->\\n        <ng-container matColumnDef=\\\"end_date\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>End Date</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\">{{row.end_date}}</td>\\n        </ng-container>\\n        <!-- Subject Column -->\\n        <ng-container matColumnDef=\\\"progress\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>Progress</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\">\\n                {{row.progress}} %\\n                <mat-progress-bar\\n                    class=\\\"example-margin\\\"\\n                    color=\\\"primary\\\"\\n                    mode=\\\"determinate\\\"\\n                    value=\\\"{{row.progress}}\\\"\\n                    bufferValue=\\\"75\\\">\\n            </mat-progress-bar>\\n            </td>\\n\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"survey\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header style=\\\"padding-left: 15px\\\"> Survey</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\">\\n                <button disabled=\\\"{{!row.teacher_assigned}}\\\" mat-button color=\\\"primary\\\" [routerLink]=\\\"['/create-survey', row._id]\\\">Write Survey</button>\\n            </td>\\n        </ng-container>\\n\\n        <!-- Delete Column -->\\n        <ng-container matColumnDef=\\\"delete\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header style=\\\"padding-left: 15px\\\"> Delete</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\">\\n                <button disabled=\\\"{{row.teacher_assigned}}\\\" color=\\\"warn\\\" mat-button  style=\\\"width: 20px !important;\\\" (click)=\\\"deleteSubject(row)\\\">\\n                    <mat-icon >delete</mat-icon>\\n                </button>\\n            </td>\\n        </ng-container>\\n\\n\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n        </tr>\\n    </table>\\n\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[10, 25, 100]\\\"></mat-paginator>\\n</div>\\n\"","import {Router} from '@angular/router';\nimport {Component, ViewChild} from '@angular/core';\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\nimport {StudentSubjectService} from '../../../services/student-subject/student-subject.service';\n\n@Component({\n    selector: 'app-student-dashboard',\n    templateUrl: './student-dashboard.component.html',\n    styleUrls: ['./student-dashboard.component.css']\n})\nexport class StudentDashboardComponent {\n    subjects: Object;\n    subjectsArray: any;\n\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n    @ViewChild(MatSort) sort: MatSort;\n    displayedColumns: string[] = ['id', 'subject', 'mentor', 'start_date', 'end_date', 'progress', 'survey', 'delete'];\n    dataSource: MatTableDataSource<Object>;\n\n    constructor(private studentSubjectService: StudentSubjectService,\n                private router: Router) {\n        this.getStudentSubject();\n    }\n\n    getStudentSubject() {\n        this.dataSource = new MatTableDataSource();\n        const userTypeToken = JSON.parse(localStorage.getItem('user'));\n        this.subjectsArray = [];\n\n        this.studentSubjectService.getStudentSubjectsByStudentId(\"/\" + userTypeToken.id).subscribe(data => {\n            for (const index in data) {\n                this.subjectsArray.push({\n                    id: Number(index) + 1,\n                    _id: data[index]._id,\n                    mentor: data[index].mentor['length'] !== 0 ? data[index].mentor[0].name : '',\n                    subject: data[index].subject['length'] !== 0 ? data[index].subject[0].name : '',\n                    start_date: data[index].start_date,\n                    end_date: data[index].end_date,\n                    progress: data[index].mentoringmeeting['length'] !== 0 ?\n                        Math.round((data[index].mentoringmeeting[0].section / data[index].subject[0].sections) * 100) : '0',\n                    teacher_assigned: data[index].teacher_assigned\n                });\n                console.log(data[index].mentoringmeeting['length'] !== 0 ? data[index].mentoringmeeting[0].section : '');\n            }\n            this.dataSource = new MatTableDataSource(this.subjectsArray);\n            this.dataSource.paginator = this.paginator;\n            this.dataSource.sort = this.sort;\n\n        });\n    }\n\n    applyFilter(filterValue: string) {\n        this.dataSource.filter = filterValue.trim().toLowerCase();\n\n        if (this.dataSource.paginator) {\n            this.dataSource.paginator.firstPage();\n        }\n    }\n\n    deleteSubject(row) {\n        this.studentSubjectService.deleteStudentSubject(row._id).then(data => {\n            this.router.navigate(['/student-dashboard']);\n        });\n        this.subjectsArray.splice(row.id - 1);\n        this.dataSource = new MatTableDataSource(this.subjectsArray);\n    }\n\n\n}\n","module.exports = \"\"","module.exports = \"<h2 class=\\\"mat-h2\\\" >Select a subject to study</h2>\\n\\n\\n<form class=\\\"example-form\\\" (submit)=\\\"onRegisterSubmit()\\\">\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <mat-select [(ngModel)]=\\\"subject_id\\\" name=\\\"subject_id\\\"  placeholder=\\\"Type\\\">\\n      <mat-option *ngFor=\\\"let subject of subjects\\\" [value]=\\\"subject._id\\\">{{subject.name}}</mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n  <br/>\\n  <br/>\\n  <br/>\\n\\n  <div class=\\\"button-row\\\">\\n    <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Save</button>\\n  </div>\\n  <br/>\\n  <br/>\\n  <br/></form>\\n\\n\\n\\n\"","import {Component} from '@angular/core';\nimport {SubjectService} from '../../../../services/subject.service';\nimport {Router} from '@angular/router';\nimport {StudentSubjectService} from '../../../../services/student-subject/student-subject.service';\nimport {MatSnackBar} from '@angular/material';\n\n@Component({\n    selector: 'app-student-enrollment',\n    templateUrl: './student-enrollment.component.html',\n    styleUrls: ['./student-enrollment.component.css']\n})\nexport class StudentEnrollmentComponent {\n    subjects: Object;\n    subject_id: String;\n    user: Object;\n\n    constructor(private subjectService: SubjectService, private studentSubjectService: StudentSubjectService,\n                private snackBar: MatSnackBar,\n                private router: Router) {\n        this.subjectService.getSubjects()\n            .subscribe(subjects => {\n                this.subjects = subjects;\n            });\n    }\n\n    onRegisterSubmit(formList: any) {\n\n        const subject = {\n            subject_id: this.subject_id,\n            student_id: JSON.parse(localStorage.getItem('user')).id\n        };\n\n        this.studentSubjectService.registerStudentSubject(subject).subscribe(data => {\n            if (data['success']) {\n                this.router.navigate(['/student-dashboard']);\n                this.snackBar.open('New subject selected!', null, {duration: 2000});\n\n            } else {\n                this.snackBar.open('Something went wrong!', null, {duration: 2000});\n\n            }\n        });\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<h2 class=\\\"page-header\\\">Login</h2>\\n\\n<form (submit)=\\\"onLoginSubmit()\\\" class=\\\"example-form\\\">\\n    <mat-form-field class=\\\"example-full-width\\\">\\n        <mat-select [(ngModel)]=\\\"type\\\" name=\\\"type\\\" placeholder=\\\"Type\\\">\\n            <mat-option value=\\\"admin\\\">Admin</mat-option>\\n            <mat-option value=\\\"mentor\\\">Mentor</mat-option>\\n            <mat-option value=\\\"student\\\">Student</mat-option>\\n        </mat-select>\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n        <input matInput type=\\\"email\\\" placeholder=\\\"Email Address\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n        <input matInput type=\\\"password\\\" placeholder=\\\"Password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\"\\n               autocomplete=\\\"true\\\">\\n    </mat-form-field>\\n\\n    <br/>\\n    <br/>\\n    <br/>\\n\\n    <div class=\\\"button-row\\\">\\n        <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Login</button>\\n    </div>\\n    <br/>\\n    <br/>\\n    <br/>\\n\\n</form>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {StudentService} from '../../services/student.service';\nimport {MentorService} from '../../services/mentor.service';\nimport {AdminService} from '../../services/admin.service';\nimport {MatSnackBar} from '@angular/material';\n\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html',\n    styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n    email: String;\n    password: String;\n    type: String;\n\n    constructor(\n                private studentService: StudentService,\n                private mentorService: MentorService,\n                private adminService: AdminService,\n                private router: Router,\n                private snackBar: MatSnackBar) {\n        this.type = 'admin';\n    }\n\n\n    onLoginSubmit() {\n        const user = {\n            email: this.email,\n            password: this.password\n        };\n        if (this.type === 'mentor') {\n            this.mentorService.authenticateMentor(user).subscribe(data => {\n                if (data['success']) {\n                    this.mentorService.storeMentorData(data['token'], data['mentor']);\n                    this.router.navigate(['mentor-dashboard']);\n                } else {\n                    this.snackBar.open('Login Failed', 'Dismiss', {duration: 2000});\n                    this.router.navigate(['login']);\n                }\n            });\n        } else if (this.type === 'student') {\n            this.studentService.authenticateStudent(user).subscribe(data => {\n                if (data['success']) {\n                    this.studentService.storeStudentData(data['token'], data['student']);\n                    this.router.navigate(['student-dashboard']);\n                } else {\n                    this.router.navigate(['login']);\n                    this.snackBar.open('Login Failed', 'Dismiss', {duration: 2000});\n                }\n            });\n        } else if (this.type === 'admin') {\n            this.adminService.authenticateAdmin(user).subscribe(data => {\n                if (data['success']) {\n                    this.adminService.storeAdminData(data['token'], data['admin']);\n                    this.router.navigate(['dashboard']);\n                } else {\n                    this.snackBar.open('Login Failed', 'Dismiss', {duration: 2000});\n                    this.router.navigate(['login']);\n                }\n            });\n        }\n\n    }\n\n}\n","module.exports = \".sidenav-container {\\n  height: 100%;\\n}\\n\\n.sidenav {\\n  width: 200px;\\n}\\n\\n.mat-toolbar.mat-primary {\\n  position: -webkit-sticky;\\n  position: sticky;\\n  top: 0;\\n  z-index: 1;\\n}\\n\\n.menu {\\n  width: 200px;\\n  /*margin-left: 200px;*/\\n}\\n\\n.expansion-body {\\n  padding: 0px !important;\\n  margin: 0px !important;\\n}\\n\\n.mat-nav-list a.active {\\n  background: #b9b9b9;\\n}\\n\"","module.exports = \"\\n<mat-sidenav-container class=\\\"sidenav-container\\\">\\n    <mat-sidenav\\n            #drawer\\n            class=\\\"sidenav\\\"\\n            fixedInViewport=\\\"true\\\"\\n            [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\n            [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\n            [opened]=\\\"!(isHandset$ | async) && authService.loggedIn()\\\">\\n        <mat-toolbar color=\\\"primary\\\">HBE\\n        </mat-toolbar>\\n\\n        <mat-nav-list>\\n            <a mat-list-item (click)=\\\"goToDashboard()\\\"  routerLinkActive=\\\"active\\\">Dashboard</a>\\n            <a mat-list-item *ngIf=\\\"authService.getUserType()=='admin'\\\"  routerLinkActive=\\\"active\\\" [routerLink]=\\\"['/subject-list']\\\">Subjects</a>\\n            <a mat-list-item  *ngIf=\\\"authService.getUserType()=='mentor'\\\" [routerLink]=\\\"['/select-subject']\\\" routerLinkActive=\\\"active\\\">My Subjects</a>\\n            <mat-expansion-panel class=\\\"sidenav\\\" style=\\\"box-shadow: none;\\\">\\n                <mat-expansion-panel-header style=\\\"padding-left: 0px !important;\\\">\\n                    <a mat-list-item>Resources</a>\\n                </mat-expansion-panel-header>\\n                <mat-list-item [routerLink]=\\\"['/local-list']\\\" routerLinkActive=\\\"active\\\">Local</mat-list-item>\\n                <mat-list-item [routerLink]=\\\"['/online-list']\\\" routerLinkActive=\\\"active\\\">Online</mat-list-item>\\n            </mat-expansion-panel>\\n            <mat-expansion-panel *ngIf=\\\"authService.getUserType()=='admin'\\\" class=\\\"sidenav\\\" style=\\\"box-shadow: none;\\\">\\n                <mat-expansion-panel-header style=\\\"padding-left: 0px !important;\\\">\\n                    <a mat-list-item>User Managment</a>\\n                </mat-expansion-panel-header>\\n                <a mat-list-item [routerLink]=\\\"['/student-list']\\\" routerLinkActive=\\\"active\\\">Students</a>\\n                <a mat-list-item [routerLink]=\\\"['/mentor-list']\\\" routerLinkActive=\\\"active\\\">Mentors</a>\\n                <a mat-list-item [routerLink]=\\\"['/admin-list']\\\" routerLinkActive=\\\"active\\\">Admins</a>\\n            </mat-expansion-panel>\\n            <a mat-list-item *ngIf=\\\"authService.getUserType()=='admin'\\\" routerLinkActive=\\\"active\\\">Reports</a>\\n            <!--<a mat-list-item [routerLink]=\\\"['/profile']\\\" routerLinkActive=\\\"active\\\">Profile</a>-->\\n            <a (click)=\\\"logout(drawer)\\\" mat-list-item>Logout</a>\\n        </mat-nav-list>\\n    </mat-sidenav>\\n\\n\\n    <mat-sidenav-content>\\n        <mat-toolbar color=\\\"primary\\\">\\n            <button\\n                    type=\\\"button\\\"\\n                    aria-label=\\\"Toggle sidenav\\\"\\n                    mat-icon-button\\n                    (click)=\\\"drawer.toggle()\\\"\\n                    *ngIf=\\\"(isHandset$ | async) && authService.loggedIn()\\\">\\n                <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon>\\n            </button>\\n            <span style=\\\"flex: auto\\\"></span>\\n            <button *ngIf=\\\"!authService.loggedIn()\\\" mat-icon-button [matMenuTriggerFor]=\\\"menu\\\"\\n                    style=\\\"margin-right: 20px; margin-right: 20px;\\\">\\n                Signup\\n            </button>\\n            <mat-menu #menu=\\\"matMenu\\\">\\n                <button mat-menu-item class=\\\"dropdown-item\\\"\\n                       [routerLink]=\\\"['/mentor-register']\\\">Mentor\\n                </button>\\n                <button mat-menu-item  class=\\\"dropdown-item\\\"\\n                       [routerLink]=\\\"['/student-register']\\\">Student\\n                </button>\\n            </mat-menu>\\n\\n        </mat-toolbar>\\n        <ng-content></ng-content>\\n        <!-- Add Content Here -->\\n    </mat-sidenav-content>\\n</mat-sidenav-container>\\n\\n\"","import {Component} from '@angular/core';\nimport {BreakpointObserver, Breakpoints, BreakpointState} from '@angular/cdk/layout';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {Router} from '@angular/router';\nimport {AuthService} from '../../services/auth.service';\n\n@Component({\n    selector: 'main-nav',\n    templateUrl: './main-nav.component.html',\n    styleUrls: ['./main-nav.component.css']\n})\nexport class MainNavComponent {\n    isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n        .pipe(\n            map(result => result.matches)\n        );\n\n    constructor(private breakpointObserver: BreakpointObserver,\n                private router: Router,\n                private authService: AuthService) {\n\n    }\n\n    logout(drawer) {\n        this.authService.logout();\n        this.router.navigate(['/login']);\n        drawer.close();\n    }\n\n    goToDashboard() {\n        switch (this.authService.getUserType()) {\n            case 'admin':\n                this.router.navigate(['/dashboard']);\n                break;\n            case 'mentor':\n                this.router.navigate(['/mentor-dashboard']);\n                break;\n            case 'student':\n                this.router.navigate(['/student-dashboard']);\n                break;\n        }\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<h1 class=\\\"mat-h1\\\">Student Details</h1>\\n\\n<div class=\\\"row\\\" style=\\\"display: flex\\\">\\n    <div style=\\\"flex: 3\\\">\\n        <table style=\\\"border-right: 1px solid lightgray;\\\">\\n            <tbody>\\n            <tr>\\n                <th style=\\\"border: none; text-align: left\\\">Name</th>\\n                <td style=\\\"border: none; text-align: left\\\">{{student.name}}</td>\\n            </tr>\\n            <tr>\\n                <th style=\\\"border: none; text-align: left\\\">Contact</th>\\n                <td style=\\\"border: none; text-align: left\\\">{{student.phone}}</td>\\n            </tr>\\n            <tr>\\n                <th style=\\\"border: none; text-align: left\\\">Email</th>\\n                <td style=\\\"border: none; text-align: left\\\">{{student.email}}</td>\\n            </tr>\\n            <tr>\\n                <th style=\\\"border: none; text-align: left\\\">Parent's Cont.</th>\\n                <td style=\\\"border: none; text-align: left\\\">{{student.parents_phone}}</td>\\n            </tr>\\n            <tr>\\n                <th style=\\\"border: none; text-align: left\\\">Gender</th>\\n                <td style=\\\"border: none; text-align: left\\\">{{student.gender}}</td>\\n            </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n    <div style=\\\"flex: 3\\\">\\n        <table style=\\\"border-right: 1px solid lightgray; margin-left: 10px;\\\">\\n            <tbody>\\n            <tr>\\n                <th style=\\\"border: none; text-align: left\\\">Prf. Mentor Gender</th>\\n                <td style=\\\"border: none; text-align: left\\\">{{student.tutor_gender}}</td>\\n            </tr>\\n            <tr>\\n                <th style=\\\"border: none; text-align: left\\\">Country</th>\\n                <td style=\\\"border: none; text-align: left\\\">{{student.country}}</td>\\n            </tr>\\n            <tr>\\n                <th style=\\\"border: none; text-align: left\\\">Language</th>\\n                <td style=\\\"border: none; text-align: left\\\">{{student.language}}</td>\\n            </tr>\\n            <tr>\\n                <th style=\\\"border: none; text-align: left\\\">English Level</th>\\n                <td style=\\\"border: none; text-align: left\\\">{{student.english_level}}</td>\\n            </tr>\\n            <tr>\\n                <th style=\\\"border: none; text-align: left\\\">School</th>\\n                <td style=\\\"border: none; text-align: left\\\">{{student.school_name}}</td>\\n            </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n    <div style=\\\"flex: 3; margin-left: 10px;\\\">\\n        <table style=\\\"margin-left: 10px;\\\" >\\n            <tbody>\\n            <tr>\\n                <th style=\\\"border: none; text-align: left\\\">School Level</th>\\n                <td style=\\\"border: none; text-align: left\\\">{{student.school_level}}</td>\\n            </tr>\\n            <tr>\\n                <th style=\\\"border: none; text-align: left\\\">Address</th>\\n                <td style=\\\"border: none; text-align: left\\\">{{student.address}}</td>\\n            </tr>\\n            <tr>\\n                <th style=\\\"border: none; text-align: left\\\">Pref. Mentoring Location</th>\\n                <td style=\\\"border: none; text-align: left\\\">{{student.mentoring_address}}</td>\\n            </tr>\\n            <tr>\\n                <th style=\\\"border: none; text-align: left\\\">Subject</th>\\n                <td style=\\\"border: none; text-align: left\\\">{{subject.name}}</td>\\n            </tr>\\n            </tbody>\\n        </table>\\n    </div>\\n</div>\\n<br/>\\n<br/>\\n\\n<h1 class=\\\"mat-h1\\\">Select A Mentor</h1>\\n<mat-form-field>\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n</mat-form-field>\\n\\n<div class=\\\"mat-elevation-z8 \\\">\\n    <table *ngIf=\\\"true\\\" mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n        <!-- Number Column -->\\n        <ng-container matColumnDef=\\\"id\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> No.</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.id+1}}</td>\\n        </ng-container>\\n\\n        <!-- Name Column -->\\n        <ng-container matColumnDef=\\\"name\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Name</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.name}}</td>\\n        </ng-container>\\n\\n        <!-- Phone Column -->\\n        <ng-container matColumnDef=\\\"phone\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Phone</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.phone}}</td>\\n        </ng-container>\\n        <!-- Country Column -->\\n        <ng-container matColumnDef=\\\"location\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Coverage & Transportation</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.location}}</td>\\n        </ng-container>\\n        <!-- Subject Column -->\\n        <ng-container matColumnDef=\\\"starting_date\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Starting Date</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\">\\n                <mat-form-field>\\n                    <input matInput [matDatepicker]=\\\"picker\\\" placeholder=\\\"Choose a date\\\">\\n                    <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n                    <mat-datepicker #picker></mat-datepicker>\\n                </mat-form-field>\\n            </td>\\n        </ng-container>\\n\\n        <!-- Delete Column -->\\n        <ng-container matColumnDef=\\\"assign\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Select Mentor</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\">\\n                <button mat-button color=\\\"primary\\\" (click)=\\\"onAssignMentor(row._id)\\\">Select</button>\\n            </td>\\n        </ng-container>\\n\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n        </tr>\\n    </table>\\n\\n\\n    <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\n</div>\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {MentorSubjectService} from '../../../services/mentor-subject/mentor-subject.service';\nimport {MentorService} from '../../../services/mentor.service';\nimport {StudentSubjectService} from '../../../services/student-subject/student-subject.service';\nimport {Router} from '@angular/router';\nimport {MatPaginator, MatSnackBar, MatSort, MatTableDataSource} from '@angular/material';\n\n\n@Component({\n    selector: 'app-mentor-assignment',\n    templateUrl: './mentor-assignment.component.html',\n    styleUrls: ['./mentor-assignment.component.css']\n})\nexport class MentorAssignmentComponent implements OnInit {\n    displayedColumns: string[] = ['id', 'name', 'phone', 'location', 'starting_date', 'assign'];\n    dataSource: MatTableDataSource<Object>;\n    student: any;\n    subject: any;\n    subject_id: any;\n    mentor_data: any;\n    subject_mentors: any;\n    student_subject_id: any;\n    today: any;\n    mentor_id: String;\n    mentors: any;\n\n    i = 0;\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n    @ViewChild(MatSort) sort: MatSort;\n\n    constructor(private mentorSubjectService: MentorSubjectService,\n                private mentorService: MentorService,\n                private router: Router,\n                private studentSubjectService: StudentSubjectService,\n                private snackBar: MatSnackBar) {\n\n        this.student = JSON.parse(localStorage.getItem('assignment_data')).student;\n        this.subject = JSON.parse(localStorage.getItem('assignment_data')).subject;\n        this.student_subject_id = JSON.parse(localStorage.getItem('assignment_data'))._id;\n        this.mentors = [];\n        console.log(this.subject._id);\n\n        this.mentorSubjectService.getMentorSubjectsBySubjectId(this.subject._id).subscribe(data => {\n                console.log(data);\n            this.subject_mentors = data;\n                this.mentor_data = [];\n                if (data['length'] !== 0) {\n                    this.getMentors(this.subject_mentors);\n\n                }\n\n            }\n        );\n\n    }\n\n    getMentors(mentor) {\n        this.mentorService.getMentor(this.subject_mentors[this.i].mentor_id).then((mentor_data) => {\n            this.mentors.push({\n                id: this.i,\n                _id: mentor_data['_id'],\n                name: mentor_data['name'],\n                phone: mentor_data['phone'],\n                location: mentor_data['location'],\n                starting_date: mentor_data['starting_date']\n            });\n\n            this.i++;\n            if (this.subject_mentors['length'] > this.i) {\n                this.getMentors(this.mentors);\n            } else {\n                console.log(this.mentors);\n                this.dataSource = new MatTableDataSource(this.mentors);\n                this.dataSource.paginator = this.paginator;\n                this.dataSource.sort = this.sort;\n            }\n        }, (err) => {\n            console.log(err);\n        });\n    }\n\n\n    ngOnInit() {\n        this.today = new Date().toISOString().split('T')[0];\n\n    }\n\n    onAssignMentor(mentor_id) {\n        const student_subject = {\n            mentor_id: mentor_id,\n            start_date: this.today,\n            teacher_assigned: true\n        };\n        this.studentSubjectService.editStudentSubject(this.student_subject_id, student_subject).then((result) => {\n            this.router.navigate(['/dashboard']);\n            this.snackBar.open('Mentor assigned', null, {duration: 1500});\n\n        }, (err) => {\n            console.log(err);\n        });\n    }\n\n    applyFilter(filterValue: string) {\n        this.dataSource.filter = filterValue.trim().toLowerCase();\n\n        if (this.dataSource.paginator) {\n            this.dataSource.paginator.firstPage();\n        }\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<div>\\n  <h2 class=\\\"mat-h2\\\">Edit Mentor</h2>\\n  <form (submit)=\\\"updateMentor(mentor._id)\\\" class=\\\"example-form\\\">\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n       <input  matInput type=\\\"text\\\" placeholder=\\\"Name\\\"  [(ngModel)]=\\\"mentor.name\\\" name=\\\"name\\\" >\\n    </mat-form-field>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input  matInput type=\\\"email\\\" [(ngModel)]=\\\"mentor.email\\\" name=\\\"email\\\" placeholder=\\\"Email\\\" >\\n    </mat-form-field>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput type=\\\"phone\\\" [(ngModel)]=\\\"mentor.phone\\\" name=\\\"phone\\\" placeholder=\\\"Phone\\\">\\n    </mat-form-field>\\n    <mat-radio-group (change)=\\\"onChange($event)\\\" name=\\\"gender\\\">\\n      <label style=\\\"color: gray;\\\">Gender : </label>\\n      <mat-radio-button checked=\\\"{{mentor.gender=='male'}}\\\"  name=\\\"male\\\" value=\\\"male\\\" style=\\\"color: gray;\\\"> Male &nbsp;</mat-radio-button>\\n      <mat-radio-button checked=\\\"{{mentor.gender=='female'}}\\\"  name=\\\"female\\\" value=\\\"female\\\" style=\\\"color: gray;\\\"> Female </mat-radio-button>\\n    </mat-radio-group>\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input  matInput type=\\\"text\\\"[(ngModel)]=\\\"mentor.language\\\" name=\\\"language\\\" placeholder=\\\"Enter languages\\\">\\n    </mat-form-field>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input  matInput type=\\\"text\\\" [(ngModel)]=\\\"mentor.location\\\" name=\\\"location\\\"\\n             placeholder=\\\"Location (Please include how far you are willing to travel and whether you have access\\n        to a mode of transport (car, bike, public transport))\\\">\\n    </mat-form-field>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n    <input  matInput type=\\\"text\\\"[(ngModel)]=\\\"mentor.vce_subjects\\\" name=\\\"vce_subjects\\\"\\n             placeholder=\\\"Which subjects did you study in VCE? What were your study scores for these subjects?\\n        (skip if the question is not relevant to you)\\\">\\n    </mat-form-field>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input  matInput type=\\\"text\\\" [(ngModel)]=\\\"mentor.studying\\\" name=\\\"studying\\\"\\n             placeholder=\\\"Are you currently studying? If so, what are you studying? If not, what are your plans for 2018?\\\">\\n    </mat-form-field>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input  matInput type=\\\"text\\\" [(ngModel)]=\\\"mentor.experience\\\" name=\\\"experience\\\" placeholder=\\\"Do you have any tutoring or mentoring experience? Please elaborate.\\\">\\n    </mat-form-field>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input  matInput type=\\\"text\\\"[(ngModel)]=\\\"mentor.volunteering\\\" name=\\\"volunteering\\\"\\n             placeholder=\\\"Do you have any other experience in volunteering or community work?\\\">\\n    </mat-form-field>\\n\\n    <label style=\\\"color: gray;\\\">Do you have a working with children check? </label>\\n\\n    <mat-radio-group (change)=\\\"onChange($event)\\\" name='wwcc'>\\n      <mat-radio-button checked=\\\"{{mentor.wwcc=='Yes'}}\\\" name=\\\"wwcc\\\" value=\\\"Yes\\\" style=\\\"color: gray;\\\"> Yes &nbsp;</mat-radio-button>\\n      <mat-radio-button  name=\\\"wwcc\\\" checked=\\\"{{mentor.wwcc=='No'}}\\\" value=\\\"No\\\" style=\\\"color: gray;\\\"> No </mat-radio-button>\\n      <mat-radio-button  name=\\\"wwcc\\\" checked=\\\"{{mentor.wwcc=='In process of obtaining one'}}\\\" value=\\\"In process of obtaining one\\\" style=\\\"color: gray;\\\"> In the process of ontaining one. </mat-radio-button>\\n    </mat-radio-group>\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input  matInput type=\\\"text\\\" [(ngModel)]=\\\"mentor.why_join\\\" name=\\\"why_join\\\" class=\\\"form-control\\\" id=\\\"why_join\\\"\\n             placeholder=\\\"Why do you want to join this program? (100-200 words)\\\">\\n    </mat-form-field>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input  matInput type=\\\"text\\\"[(ngModel)]=\\\"mentor.about_us\\\" name=\\\"about_us\\\" class=\\\"form-control\\\" id=\\\"about_us\\\"\\n             placeholder=\\\"Where did you hear about us?\\\">\\n    </mat-form-field>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input  matInput type=\\\"text\\\" [(ngModel)]=\\\"mentor.refugee_definition\\\" name=\\\"refugee_definition\\\" placeholder=\\\"What does the term 'refugee' mean to you? (100-200 words)\\\">\\n    </mat-form-field>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input  matInput type=\\\"text\\\"[(ngModel)]=\\\"mentor.preference\\\" name=\\\"preference\\\"\\n             placeholder=\\\"Do you have any special preferences with regards to students? (e.g. 'not willing to\\n        mentor VCE level students')\\\">\\n    </mat-form-field>\\n\\n    <mat-checkbox [(ngModel)]=\\\"mentor.send_me_copy\\\"  name=\\\"send_me_copy\\\" style=\\\"color: gray;\\\">Send Me A Copy Of My Responses.</mat-checkbox>\\n    <br/>\\n    <br/>\\n    <br/>\\n\\n    <div class=\\\"button-row\\\">\\n      <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" >Save</button>\\n    </div>\\n    <br/>\\n    <br/>\\n    <br/>\\n  </form>\\n</div>\\n\\n\\n\"","import {Component, OnInit} from '@angular/core';\nimport {MentorService} from \"../../../services/mentor.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {MatRadioChange, MatSnackBar} from \"@angular/material\";\n\n@Component({\n    selector: 'app-mentor-edit',\n    templateUrl: './mentor-edit.component.html',\n    styleUrls: ['./mentor-edit.component.css']\n})\nexport class MentorEditComponent implements OnInit {\n\n    mentor = {};\n\n    constructor(private  mentorService: MentorService,\n                private route: Router,\n                private activatedRoute: ActivatedRoute,\n                private snackBar: MatSnackBar) {\n\n    }\n\n    ngOnInit() {\n        this.getMentor(this.activatedRoute.snapshot.params['id']);\n    }\n\n    getMentor(id) {\n        this.mentorService.getMentor(id).then((res) => {\n            this.mentor = res;\n        }, (err) => {\n            console.log(err);\n        });\n    }\n\n    updateMentor(id) {\n        this.mentorService.editMentor(id, this.mentor).then((result) => {\n            let id = result['_id'];\n            this.route.navigate(['/mentor-list']);\n            this.snackBar.open('Mentor updated!', null, {duration: 2000});\n\n        }, (err) => {\n            console.log(err);\n        });\n    }\n\n    onChange(mrChange: MatRadioChange) {\n        if (mrChange.source.name === 'wwcc') {\n            this.mentor['wwcc'] = mrChange.source.value;\n        }\n        if (mrChange.source.name === 'gender') {\n            this.mentor['gender'] = mrChange.source.value;\n        }\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<h1 class=\\\"mat-h1\\\">Registered Mentors</h1>\\n\\n<mat-form-field>\\n  <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n</mat-form-field>\\n\\n<div class=\\\"mat-elevation-z8\\\">\\n  <table *ngIf=\\\"true\\\" mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n    <!-- Number Column -->\\n    <ng-container matColumnDef=\\\"id\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> No.</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.id}}</td>\\n    </ng-container>\\n\\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Name</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.name}}</td>\\n    </ng-container>\\n\\n    <!-- Email Column -->\\n    <ng-container matColumnDef=\\\"email\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Email</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.email}}</td>\\n    </ng-container>\\n    <!-- Phone Column -->\\n    <ng-container matColumnDef=\\\"phone\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Phone</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.phone}}</td>\\n    </ng-container>\\n    <!-- Gender Column -->\\n    <ng-container matColumnDef=\\\"gender\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Gender</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.gender}}</td>\\n    </ng-container>\\n    <!-- Status Column -->\\n    <ng-container matColumnDef=\\\"status\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Status</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.status}}</td>\\n    </ng-container>\\n    <!-- Edit Column -->\\n    <ng-container matColumnDef=\\\"edit\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Edit</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> <a [routerLink]=\\\"['/mentor-edit', row._id]\\\">\\n        <mat-icon style=\\\"color: darkgreen\\\">edit</mat-icon>\\n      </a>\\n\\n      </td>\\n    </ng-container>\\n\\n    <!-- Delete Column -->\\n    <ng-container matColumnDef=\\\"delete\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Delete</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"><a [routerLink]=\\\"['/mentor-list', row._id]\\\" (click)=\\\"deleteMentor(row._id)\\\" >\\n        <mat-icon style=\\\"color: red\\\">delete</mat-icon>\\n      </a>\\n\\n      </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n    </tr>\\n  </table>\\n\\n\\n  <mat-paginator [pageSizeOptions]=\\\"[10, 25, 100]\\\"></mat-paginator>\\n</div>\\n\"","import {MentorService} from '../../../services/mentor.service';\nimport {Router} from '@angular/router';\n\nimport {Component, ViewChild} from '@angular/core';\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\n\n@Component({\n    selector: 'app-mentor-list',\n    templateUrl: './mentor-list.component.html',\n    styleUrls: ['./mentor-list.component.css']\n})\nexport class MentorListComponent {\n    displayedColumns: string[] = ['id', 'name', 'email', 'phone', 'gender', 'status', 'edit', 'delete'];\n    dataSource: MatTableDataSource<Object>;\n    isDataLoaded: boolean;\n\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n    @ViewChild(MatSort) sort: MatSort;\n\n    mentors: any;\n    users: any;\n    i = 0;\n\n    constructor(private mentorService: MentorService, private router: Router) {\n        this.isDataLoaded = false;\n        this.mentorService.getMentors()\n            .subscribe(mentors => {\n                this.mentors = mentors;\n                this.users = [];\n                for (this.i = 0; this.i < this.mentors.length; this.i++) {\n                    this.users.push({\n                        id: this.i + 1,\n                        _id: this.mentors[this.i]._id,\n                        name: this.mentors[this.i].name,\n                        email: this.mentors[this.i].email,\n                        phone: this.mentors[this.i].phone,\n                        gender: this.mentors[this.i].gender,\n                        status: this.mentors[this.i].status,\n                        edit: '',\n                        delete: ''\n                    });\n                }\n                this.dataSource = new MatTableDataSource(this.users);\n                this.dataSource.paginator = this.paginator;\n                this.dataSource.sort = this.sort;\n            });\n    }\n\n    deleteMentor(id) {\n        this.mentorService.deleteMentor(id).then((result) => {\n            this.router.navigate(['/mentor-list']);\n        }, (err) => {\n            console.log(err);\n        });\n    }\n\n    applyFilter(filterValue: string) {\n        this.dataSource.filter = filterValue.trim().toLowerCase();\n\n        if (this.dataSource.paginator) {\n            this.dataSource.paginator.firstPage();\n        }\n    }\n}\n","module.exports = \".example-container {\\n    display: flex;\\n    flex-direction: column;\\n}\\n\\n.example-container > * {\\n    width: 100%;\\n}\\n\\n.example-form {\\n    min-width: 100%;\\n    max-width: 100%;\\n    width: 100%;\\n}\\n\\n.example-full-width {\\n    width: 100%;\\n}\\n\\n.mat-radio-button ~ .mat-radio-button {\\n    padding-right: 16px;\\n}\"","module.exports = \"<link rel=\\\"stylesheet\\\" href=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css\\\">\\n\\n<h1 class=\\\"mat-h1\\\">Mentor Registration Form</h1>\\n\\n<mat-horizontal-stepper [linear]=\\\"isLinear\\\" #stepper>\\n    <mat-step [stepControl]=\\\"firstFormGroup\\\">\\n        <form [formGroup]=\\\"firstFormGroup\\\">\\n            <ng-template matStepLabel>Fill out your information</ng-template>\\n            <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput type=\\\"text\\\" placeholder=\\\"Name\\\" formControlName=\\\"name\\\" required>\\n            </mat-form-field>\\n            <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput type=\\\"email\\\" placeholder=\\\"Email Address\\\" formControlName=\\\"email\\\" required>\\n            </mat-form-field>\\n            <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput type=\\\"password\\\" placeholder=\\\"Password\\\" formControlName=\\\"password\\\" required>\\n            </mat-form-field>\\n            <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput type=\\\"phone\\\" placeholder=\\\"Enter phone number\\\" formControlName=\\\"phone\\\" required>\\n            </mat-form-field>\\n            <mat-radio-group (change)=\\\"onChange($event)\\\" formControlName=\\\"gender\\\" required>\\n                <label style=\\\"color: gray;\\\">Gender : </label>\\n                <mat-radio-button id=\\\"male\\\" name=\\\"male\\\" value=\\\"male\\\" style=\\\"color: gray;\\\"> Male &nbsp;\\n                </mat-radio-button>\\n                <mat-radio-button id=\\\"female\\\" name=\\\"female\\\" value=\\\"female\\\" style=\\\"color: gray;\\\"> Female\\n                </mat-radio-button>\\n            </mat-radio-group>\\n            <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput type=\\\"text\\\" placeholder=\\\"Enter languages\\\" formControlName=\\\"language\\\" required>\\n            </mat-form-field>\\n            <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput type=\\\"text\\\" placeholder=\\\"Location (Please include how far you are willing to travel and whether you have access\\n        to a mode of transport (car, bike, public transport)).\\\" formControlName=\\\"location\\\" required>\\n            </mat-form-field>\\n            <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput type=\\\"text\\\" placeholder=\\\"Which subjects did you study in VCE? What were your study scores for these subjects?\\n        (skip if the question is not relevant to you)\\\" formControlName=\\\"vce_subjects\\\" required>\\n            </mat-form-field>\\n            <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput type=\\\"text\\\" placeholder=\\\"Are you currently studying? If so, what are you studying? If not, what are your plans\\n        for 2018?\\\" formControlName=\\\"studying\\\" required>\\n            </mat-form-field>\\n            <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput type=\\\"text\\\"\\n                       placeholder=\\\"Do you have any tutoring or mentoring experience? Please elaborate.\\\"\\n                       formControlName=\\\"experience\\\" required>\\n            </mat-form-field>\\n            <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput type=\\\"text\\\"\\n                       placeholder=\\\"Do you have any other experience in volunteering or community work?\\\"\\n                       formControlName=\\\"volunteering\\\" required>\\n            </mat-form-field>\\n            <label style=\\\"color: gray;\\\">Do you have a working with children check? </label>\\n            <mat-radio-group (change)=\\\"onChange($event)\\\" formControlName=\\\"wwcc\\\" required>\\n                <mat-radio-button name=\\\"wwcc\\\" value=\\\"Yes\\\" style=\\\"color: gray;\\\"> Yes &nbsp;</mat-radio-button>\\n                <mat-radio-button name=\\\"wwcc\\\" value=\\\"No\\\" style=\\\"color: gray;\\\"> No</mat-radio-button>\\n                <mat-radio-button name=\\\"wwcc\\\" value=\\\"In process of obtaining one\\\" style=\\\"color: gray;\\\"> In the process\\n                    of ontaining one.\\n                </mat-radio-button>\\n            </mat-radio-group>\\n            <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput type=\\\"text\\\" placeholder=\\\"Why do you want to join this program? (100-200 words)\\\"\\n                       formControlName=\\\"why_join\\\" required>\\n            </mat-form-field>\\n            <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput type=\\\"text\\\" placeholder=\\\"Where did you hear about us?\\\" formControlName=\\\"about_us\\\"\\n                       required>\\n            </mat-form-field>\\n            <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput type=\\\"text\\\" placeholder=\\\"What does the term 'refugee' mean to you? (100-200 words)\\\"\\n                       formControlName=\\\"refugee_definition\\\" required>\\n            </mat-form-field>\\n            <mat-form-field class=\\\"example-full-width\\\">\\n                <input matInput type=\\\"text\\\" placeholder=\\\"Do you have any special preferences with regards to students? (e.g. 'not willing to\\n        mentor VCE level students')\\\" formControlName=\\\"preference\\\" required>\\n            </mat-form-field>\\n            <mat-checkbox name=\\\"send_me_copy\\\" style=\\\"color: gray;\\\" formControlName=\\\"send_me_copy\\\">Send Me A Copy Of My\\n                Responses.\\n            </mat-checkbox>\\n            <br/>\\n            <br/>\\n            <div>\\n                <button color=\\\"primary\\\" mat-raised-button matStepperNext>Next</button>\\n            </div>\\n        </form>\\n    </mat-step>\\n    <mat-step [stepControl]=\\\"secondFormGroup\\\">\\n        <form [formGroup]=\\\"secondFormGroup\\\" enctype=\\\"multipart/form-data\\\">\\n            <ng-template matStepLabel>WWCC</ng-template>\\n            <mat-form-field style=\\\"display: none;\\\" >\\n                <input matInput placeholder=\\\"Last name, First name\\\" required formControlName=\\\"x\\\">\\n            </mat-form-field>\\n            <div class=\\\"form-group\\\">\\n                <div>\\n                    <div id=\\\"fileSelector\\\">\\n                        <input type=\\\"file\\\" class=\\\"form-control\\\" required formControlName=\\\"wwcc_back\\\"  id=\\\"wwcc_front\\\"\\n                               ng2FileSelect [uploader]=\\\"uploader\\\" >\\n                    </div>\\n                    <br/>\\n                    <div>\\n                        <div class=\\\"row uploadList\\\" *ngFor=\\\"let item of uploader.queue\\\">\\n                            <div class=\\\"col-sm-4\\\">{{item.file.name}}</div>\\n                            <div class=\\\"col-sm-4\\\">\\n                                <div class=\\\"progress\\\">\\n                                    <div class=\\\"progress-bar bg-success\\\"\\n                                         [ngStyle]=\\\"{'width':item.progress+'%'}\\\"></div>\\n                                </div>\\n                            </div>\\n                            <div class=\\\"col-sm-4\\\" style=\\\"margin-top: -8px;\\\">\\n                                <button mat-button color=\\\"primary\\\" (click)=\\\"item.upload()\\\">Upload</button>\\n                                <button mat-button color=\\\"warn\\\" (click)=\\\"item.remove()\\\">Cancel</button>\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"row col-sm-10 \\\" *ngIf=\\\"uploader?.queue?.length > 0\\\">\\n                        <button mat-stroked-button color=\\\"primary\\\" (click)=\\\"uploader.uploadAll()\\\" style=\\\"float: right\\\">\\n                            Upload All\\n                        </button>\\n                    </div>\\n                    <div class=\\\"col-md-2\\\"></div>\\n                </div>\\n\\n            </div>\\n            <br>\\n            <mat-label class=\\\"row\\\">It's really important that our students stay safe whilst being a part of this\\n                program. Thus, we require that all our tutors have a valid Working with Children Check.If you do not\\n                have a valid WWCC, could you please visit <a target=\\\"_blank\\\"\\n                                                             href=\\\"http://www.workingwithchildren.vic.gov.au/\\\">this\\n                    website </a> and apply for a Volunteer WWCC?\\n            </mat-label>\\n            <br>\\n            <br>\\n            <div>\\n                <button mat-raised-button color=\\\"primary\\\" matStepperPrevious>Back</button>&nbsp;\\n                <button mat-raised-button color=\\\"primary\\\" matStepperNext>Next</button>\\n            </div>\\n        </form>\\n    </mat-step>\\n    <mat-step thirdFormGroup>\\n        <ng-template matStepLabel>Videos</ng-template>\\n        You are now done.\\n        <div>\\n            <button mat-raised-button color=\\\"primary\\\" matStepperPrevious>Back</button>&nbsp;\\n            <button mat-raised-button color=\\\"primary\\\" matStepperNext>Next</button>\\n        </div>\\n    </mat-step>\\n    <mat-step>\\n        <ng-template matStepLabel>Done</ng-template>\\n        You are now done.\\n        <div>\\n            <button mat-raised-button color=\\\"primary\\\" matStepperPrevious>Back</button>&nbsp;\\n            <button mat-raised-button color=\\\"primary\\\" (click)=\\\"onRegisterSubmit()\\\" matStepperNext>Next</button>\\n        </div>\\n    </mat-step>\\n\\n\\n</mat-horizontal-stepper>\"","import {Component, OnInit, Input, EventEmitter, Output} from '@angular/core';\nimport {FlashMessagesService} from \"angular2-flash-messages\";\nimport {Router} from \"@angular/router\";\nimport {ValidateService} from \"../../../../services/validate.service\";\nimport {MentorService} from \"../../../../services/mentor.service\";\nimport {MatRadioChange, MatSnackBar} from \"@angular/material\";\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {FileSelectDirective, FileUploader} from 'ng2-file-upload';\nimport {saveAs} from 'file-saver';\n\nconst uri = 'http://localhost:3000/mentor_subjects/upload';\n\n@Component({\n    selector: 'app-mentor-register',\n    templateUrl: './mentor-register.component.html',\n    styleUrls: ['./mentor-register.component.css']\n})\nexport class MentorRegisterComponent implements OnInit {\n    isLinear = true;\n    firstFormGroup: FormGroup;\n    secondFormGroup: FormGroup;\n    thirdFormGroup: FormGroup;\n\n    uploader: FileUploader = new FileUploader({url: uri});\n    attachmentList: any = [];\n\n    wwcc_back: String;\n    wwcc_front: String;\n\n    @Output()\n    change: EventEmitter<MatRadioChange>\n\n    name: String;\n    password: String;\n    email: String;\n    phone: String;\n    language: String;\n    vce_subjects: String;\n    location: String;\n    studying: String;\n    experience: String;\n    volunteering: String;\n    wwcc: String;\n    why_join: String;\n    about_us: String;\n    refugee_definition: String;\n    preference: String;\n    gender: String;\n    send_me_copy: String;\n\n    constructor(private _formBuilder: FormBuilder,\n                private mentorService: MentorService,\n                private router: Router,\n                private snackBar: MatSnackBar,\n                private validateService: ValidateService) {\n        this.uploader.onCompleteItem = (item: any, response: any, status: any, headers: any) => {\n\n            this.attachmentList.push(JSON.parse(response));\n            if (this.attachmentList.length === 2) {\n                this.secondFormGroup.controls.x.setValue('Hello');\n            }\n        };\n    }\n\n    onChange(mrChange: MatRadioChange) {\n        if (mrChange.source.name === 'wwcc') {\n            this.wwcc = mrChange.source.value;\n        }\n        if (mrChange.source.name === 'gender') {\n            this.gender = mrChange.source.value;\n        }\n    }\n\n\n    ngOnInit() {\n        this.uploader.onBeforeUploadItem = (item) => {\n            item.withCredentials = false;\n        };\n        this.firstFormGroup = this._formBuilder.group({\n            name: ['', Validators.required && Validators.minLength(3)],\n            email: ['', Validators.email],\n            password: ['', Validators.required && Validators.minLength(5)],\n            phone: ['', Validators.required],\n            language: ['', Validators.required],\n            vce_subjects: ['', Validators.required],\n            location: ['', Validators.required],\n            studying: ['', Validators.required],\n            experience: ['', Validators.required],\n            volunteering: ['', Validators.required],\n            wwcc: ['', Validators.required],\n            about_us: ['', Validators.required],\n            why_join: ['', Validators.required],\n            refugee_definition: ['', Validators.required],\n            preference: ['', Validators.required],\n            gender: ['', Validators.required],\n            send_me_copy: [''],\n\n        });\n        this.secondFormGroup = this._formBuilder.group({\n            wwcc_back: ['', Validators.required],\n            x: ['', Validators.required],\n        });\n        this.thirdFormGroup = this._formBuilder.group({});\n    }\n\n    onRegisterSubmit() {\n        const mentor = {\n            name: this.firstFormGroup.controls.name.value,\n            password: this.firstFormGroup.controls.password.value,\n            email: this.firstFormGroup.controls.email.value,\n            phone: this.firstFormGroup.controls.phone.value,\n            language: this.firstFormGroup.controls.language.value,\n            vce_subjects: this.firstFormGroup.controls.vce_subjects.value,\n            location: this.firstFormGroup.controls.location.value,\n            studying: this.firstFormGroup.controls.studying.value,\n            experience: this.firstFormGroup.controls.experience.value,\n            volunteering: this.firstFormGroup.controls.volunteering.value,\n            wwcc: this.firstFormGroup.controls.wwcc.value,\n            why_join: this.firstFormGroup.controls.why_join.value,\n            about_us: this.firstFormGroup.controls.about_us.value,\n            refugee_definition: this.firstFormGroup.controls.refugee_definition.value,\n            preference: this.firstFormGroup.controls.preference.value,\n            gender: this.firstFormGroup.controls.gender.value,\n            send_me_copy: this.firstFormGroup.controls.send_me_copy.value,\n            wwcc_front:  this.attachmentList[0].uploadname,\n            wwcc_back:  this.attachmentList[1].uploadname\n        };\n\n        this.mentorService.registerMentor(mentor).subscribe(data => {\n            if (data['success']) {\n                this.snackBar.open('New mentor added', null, {duration: 3000});\n                this.router.navigate(['/login']);\n            } else {\n                this.snackBar.open('Something went wrong!', null, {duration: 3000});\n            }\n        });\n    }\n}\n","module.exports = \"\"","module.exports = \"<h2 class=\\\"mat-h1\\\">New Mentoring Meeting</h2>\\n\\n<form (submit)=\\\"onSubmit()\\\" class=\\\"example-form\\\">\\n\\n  <mat-form-field>\\n    <input matInput [matDatepicker]=\\\"picker\\\" [(ngModel)]=\\\"date\\\" name = \\\"date\\\" placeholder=\\\"Choose a date\\\">\\n    <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n    <mat-datepicker #picker></mat-datepicker>\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput type=\\\"text\\\" placeholder=\\\"Subject\\\" disabled value=\\\"{{subject}}\\\" name=\\\"subject\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput type=\\\"text\\\" placeholder=\\\"Student\\\" disabled value=\\\"{{student}}\\\" name=\\\"student\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput type=\\\"text\\\" placeholder=\\\"Session\\\" disabled value=\\\"{{session}}\\\" name=\\\"session\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput type=\\\"number\\\" placeholder=\\\"Section\\\" [(ngModel)]=\\\"section\\\"  name=\\\"section\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput type=\\\"text\\\" placeholder=\\\"Duration in minutes (90)\\\" [(ngModel)]=\\\"duration\\\"  name=\\\"duration\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput type=\\\"text\\\" placeholder=\\\"Comment\\\" [(ngModel)]=\\\"comment\\\" name=\\\"comment\\\">\\n  </mat-form-field>\\n\\n\\n  <br/>\\n  <br/>\\n  <br/>\\n\\n  <div class=\\\"button-row\\\">\\n    <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Submit</button>\\n  </div>\\n  <br/>\\n  <br/>\\n  <br/>\\n\\n</form>\\n\"","import {Component} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {StudentSubjectService} from '../../../services/student-subject/student-subject.service';\nimport {MentoringMeetingService} from '../../../services/mentoring-meeting/mentoring-meeting.service';\nimport {MatSnackBar} from '@angular/material';\n\n@Component({\n    selector: 'app-create-mentoring-meeting',\n    templateUrl: './create-mentoring-meeting.component.html',\n    styleUrls: ['./create-mentoring-meeting.component.css']\n})\nexport class CreateMentoringMeetingComponent {\n    studentSubject: any;\n    date: any;\n    session: any;\n    duration: any;\n    comment: any;\n    section: any;\n    subject: any;\n    sectinos: any;\n    student: any;\n\n    constructor(private activatedRoute: ActivatedRoute,\n                private snackBar: MatSnackBar,\n                private router: Router,\n                private mentoringMeetingService: MentoringMeetingService,\n                private studentSubjectService: StudentSubjectService) {\n        this.session = 0;\n\n        this.studentSubjectService.getStudentSubjectsById(this.activatedRoute.snapshot.params['id']).subscribe(data => {\n            this.studentSubject = data;\n            this.subject = this.studentSubject[0].subject[0].name;\n            this.sectinos = this.studentSubject[0].subject[0].section;\n            this.student = this.studentSubject[0].student[0].name;\n\n        });\n\n        this.mentoringMeetingService.countMentoringMeetingById(this.activatedRoute.snapshot.params['id']).subscribe(data => {\n            this.session = Number(data) + 1;\n\n            console.log(this.session);\n        });\n\n    }\n\n    onSubmit() {\n\n        const mentoring_meeting = {\n            student_subject: this.studentSubject[0]._id,\n            date: this.date,\n            section: this.section,\n            session: this.session,\n            duration: this.duration,\n            comment: this.comment\n        };\n        this.mentoringMeetingService.registerMentoringMeeting(mentoring_meeting).subscribe(data => {\n            // console.log(mentoring_meeting);\n            if (data['success']) {\n                this.snackBar.open('Mentoring meeting recorded', null, {duration: 1500});\n                this.router.navigate(['/mentor-dashboard']);\n            } else {\n                this.snackBar.open('Something went wrong', 'Dismiss', {duration: 2000});\n            }\n        });\n    }\n\n\n}\n","module.exports = \"\"","module.exports = \"<h1 class=\\\"mat-h1\\\">Page Not Found!</h1>\\n<h3 class=\\\"mat-h3\\\">\\n  Either you are not logged in or you are trying to navigate to a route you are not privileged to.<br/>\\n  Please navigate using the menu provided.\\n</h3>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-page-not-found',\n  templateUrl: './page-not-found.component.html',\n  styleUrls: ['./page-not-found.component.css']\n})\nexport class PageNotFoundComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<h1>{{user.name}}'s Profile</h1>\\n<div *ngIf=\\\"user\\\">\\n  <ul class=\\\"list-group\\\">\\n    <li class=\\\"list-group-item\\\">Email : {{user.email}}</li>\\n  </ul>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { Router } from '@angular/router';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  user:Object;\n\n  constructor(private authService:AuthService, private router:Router) {\n    this.user = JSON.parse(localStorage.getItem('user'));\n  }\n\n  ngOnInit() {\n  //   // this.authService.getProfile().subscribe(profile => {\n  //     // this.user = profile['user'];\n  //   },\n  //    err => {\n  //      console.log(err);\n  //      return false;\n  //    });\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<p>\\n  local-edit works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-local-edit',\n  templateUrl: './local-edit.component.html',\n  styleUrls: ['./local-edit.component.css']\n})\nexport class LocalEditComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n\\n<h1 class=\\\"mat-h1\\\">New Local Resources</h1>\\n<div class=\\\"button-row\\\">\\n  <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/local-register']\\\" style=\\\"float:right;\\\">New Resource</button>\\n</div>\\n\\n<mat-form-field>\\n  <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n</mat-form-field>\\n\\n<div class=\\\"mat-elevation-z8\\\">\\n  <table *ngIf=\\\"true\\\" mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n    <!-- Number Column -->\\n    <ng-container matColumnDef=\\\"id\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> No.</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.id}}</td>\\n    </ng-container>\\n\\n    <!-- Title Column -->\\n    <ng-container matColumnDef=\\\"title\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Title</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.title}}</td>\\n    </ng-container>\\n\\n\\n    <!-- Email Column -->\\n    <ng-container matColumnDef=\\\"description\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Description</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.description}}</td>\\n    </ng-container>\\n\\n\\n    <!-- Subject Column -->\\n    <ng-container matColumnDef=\\\"subject\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Subject</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.subject}}</td>\\n    </ng-container>\\n\\n    <!-- Edit Column -->\\n    <ng-container matColumnDef=\\\"download\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Download</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> <a [routerLink]=\\\"\\\" (click)=\\\"download(row.id-1)\\\">\\n        <mat-icon style=\\\"color: darkgreen\\\">save_alt</mat-icon>\\n      </a>\\n\\n      </td>\\n    </ng-container>\\n\\n    <!-- Delete Column -->\\n    <ng-container matColumnDef=\\\"delete\\\" *ngIf=\\\"isAdmin\\\" >\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Delete</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"><a  [routerLink]=\\\"\\\" (click)=\\\"deleteRes(row._id, row.id)\\\" >\\n        <mat-icon style=\\\"color: red\\\">delete</mat-icon>\\n      </a>\\n\\n      </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"isAdmin?displayedColumnsAdmin:displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: isAdmin?displayedColumnsAdmin:displayedColumns;\\\">\\n    </tr>\\n  </table>\\n\\n\\n  <mat-paginator [pageSizeOptions]=\\\"[10, 25, 100]\\\"></mat-paginator>\\n</div>\\n\"","import {Router} from '@angular/router';\nimport {LocalResService} from '../../../../services/local_res/local-res.service';\nimport {saveAs} from 'file-saver';\nimport {Component, ViewChild} from '@angular/core';\nimport {MatPaginator, MatSnackBar, MatSort, MatTableDataSource} from '@angular/material';\nimport {AuthService} from '../../../../services/auth.service';\n\n@Component({\n    selector: 'app-local-list',\n    templateUrl: './local-list.component.html',\n    styleUrls: ['./local-list.component.css']\n})\nexport class LocalListComponent {\n    displayedColumnsAdmin: string[] = ['id', 'title', 'description', 'subject', 'download', 'delete'];\n    displayedColumns: string[] = ['id', 'title', 'description', 'subject', 'download'];\n    dataSource: MatTableDataSource<Object>;\n    isAdmin: boolean;\n\n    isDataLoaded: boolean;\n\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n    @ViewChild(MatSort) sort: MatSort;\n\n    resources: any;\n\n    constructor(private authService: AuthService, private localResService: LocalResService, private router: Router, private snackBar: MatSnackBar) {\n        this.isDataLoaded = false;\n        this.isAdmin = false;\n        this.localResService.getLocalRess()\n            .subscribe(resources => {\n                this.resources = [];\n                for (const index in resources) {\n                    this.resources.push({\n                        id: Number(index) + 1,\n                        _id: resources[index]._id,\n                        subject: resources[index].subject,\n                        title: resources[index].title,\n                        description: resources[index].description,\n                        fileUplaod: resources[index].fileUplaod\n                    });\n                }\n                this.dataSource = new MatTableDataSource(this.resources);\n                this.dataSource.paginator = this.paginator;\n                this.dataSource.sort = this.sort;\n            });\n        this.isAdmin = this.authService.getUserType() === 'admin';\n    }\n\n    deleteFile(index) {\n        // deleteRes(id);\n        var fileUplaod = this.resources[index].fileUplaod;\n\n        this.localResService.deleteFile(fileUplaod)\n            .subscribe(\n                data => saveAs(data, fileUplaod),\n                error => console.error(error)\n            );\n    }\n\n    applyFilter(filterValue: string) {\n        this.dataSource.filter = filterValue.trim().toLowerCase();\n\n        if (this.dataSource.paginator) {\n            this.dataSource.paginator.firstPage();\n        }\n    }\n\n    deleteRes(id, i) {\n        this.deleteFile(i - 1);\n        this.localResService.deleteLocalRes(id).then((result) => {\n            this.router.navigate(['/local-list']);\n            this.resources.splice(i - 1, 1);\n            this.dataSource = new MatTableDataSource(this.resources);\n        }, (err) => {\n            console.log(err);\n        });\n\n    }\n\n    download(index) {\n        const fileUplaod = this.resources[index].fileUplaod;\n        this.localResService.downloadFile(fileUplaod)\n            .subscribe(\n                data => saveAs(data, fileUplaod),\n                error => this.snackBar.open('File Not Found', 'Dismiss', {duration: 2500})\n            );\n\n    }\n\n\n}\n","module.exports = \".header-section{\\n    height: 80px;\\n    line-height: 80px;\\n    color: beige;\\n    background-color: rgb(46, 43, 43);\\n    font-size: 24px;\\n    padding-left: 20px;\\n}\\n\\n.card{\\n    background-color: white;\\n    box-shadow:0 3px 5px -1px rgba(0,0,0,.2), 0 6px 10px 0 rgba(0,0,0,.14), 0 1px 18px 0 rgba(0,0,0,.12);\\n    color:black;\\n    margin: 20px;\\n    padding: 10px;\\n}\\n\\n.uploadList{\\n    padding: 10px;\\n    margin-top: 10px;\\n    margin-bottom: 10px;\\n}\"","module.exports = \"\\n\\n<h2 class=\\\"mat-h1\\\">Local Resources</h2>\\n\\n<form (submit)=\\\"onRegisterSubmit(formList)\\\" #formList=\\\"ngForm\\\" class=\\\"example-form\\\" enctype=\\\"multipart/form-data\\\">\\n\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Title\\\" [(ngModel)]=\\\"title\\\" name=\\\"title\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Description\\\" [(ngModel)]=\\\"description\\\" name=\\\"description\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n        <mat-select [(ngModel)]=\\\"subject\\\" name=\\\"subject\\\" placeholder=\\\"Subject\\\">\\n            <mat-option *ngFor=\\\"let subject of subjects\\\" [value]=\\\"subject.name\\\">{{subject.name}}</mat-option>\\n        </mat-select>\\n    </mat-form-field>\\n    <div class=\\\"form-group\\\">\\n        <mat-label>File</mat-label>\\n        <div>\\n            <div id=\\\"fileSelector\\\">\\n                <input type=\\\"file\\\" class=\\\"form-control\\\" name=\\\"fileUplaod\\\" id=\\\"fileUpload\\\"\\n                       ng2FileSelect  [uploader]=\\\"uploader\\\">\\n            </div>\\n\\n        </div>\\n    </div>\\n    <br/>\\n    <br/>\\n\\n    <div class=\\\"button-row\\\">\\n        <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Save</button>\\n        <button mat-raised-button color=\\\"warn\\\" style=\\\"margin: 10px;\\\" [routerLink]=\\\"['/local-list']\\\">Cancel</button>\\n    </div>\\n    <br/>\\n    <br/>\\n    <br/>\\n\\n</form>\"","import {Component, OnInit} from '@angular/core';\nimport {SubjectService} from '../../../../services/subject.service';\nimport {LocalResService} from '../../../../services/local_res/local-res.service';\nimport {FileSelectDirective, FileUploader} from 'ng2-file-upload';\nimport {saveAs} from 'file-saver';\nimport {MatSnackBar} from \"@angular/material\";\nimport {Router} from \"@angular/router\";\n\nconst uri = 'http://localhost:3000/local-res/upload';\n\n@Component({\n    selector: 'app-local-register',\n    templateUrl: './local-register.component.html',\n    styleUrls: ['./local-register.component.css']\n})\nexport class LocalRegisterComponent implements OnInit {\n\n    uploader: FileUploader = new FileUploader({url: uri});\n    attachmentList: any = [];\n    title: String;\n    description: String;\n    subject: String;\n    fileUplaod: String;\n    subjects: Object;\n\n    constructor(private snackBar: MatSnackBar,\n                private router: Router,\n                private localResService: LocalResService,\n                private subjectService: SubjectService) {\n\n        subjectService.getSubjects().subscribe(subjects => {\n            this.subjects = subjects;\n        });\n        this.uploader.onCompleteItem = (item: any, response: any, status: any, headers: any) => {\n            this.attachmentList.push(JSON.parse(response));\n        };\n    }\n\n    ngOnInit() {\n        this.uploader.onBeforeUploadItem = (item) => {\n            item.withCredentials = false;\n        };\n    }\n\n    onRegisterSubmit(formList: any) {\n\n        const myUploader = this.uploader.queue[this.uploader.queue.length - 1];\n        const fileName =  Date.now() + '.' + myUploader.file.name;\n\n        myUploader.file.name = fileName;\n        myUploader.upload();\n\n        const localRes = {\n            title: this.title,\n            description: this.description,\n            subject: this.subject,\n            fileUplaod: fileName\n        };\n\n        this.localResService.registerLocalRes(localRes).subscribe(data => {\n            if (data['success']) {\n                this.snackBar.open('New resource added', 'dismiss', {duration: 3000});\n                formList.form.reset();\n            } else {\n                this.snackBar.open('Something went wrong!', 'dismiss', {duration: 3000});\n            }\n        });\n        this.router.navigate(['/local-list']);\n    }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<h2 class=\\\"mat-h1\\\">New Online Resources</h2>\\n\\n<form (submit)=\\\"updateOnlineRes(onlineRes._id)\\\" #formList=\\\"ngForm\\\" class=\\\"example-form\\\" enctype=\\\"multipart/form-data\\\">\\n\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput type=\\\"text\\\" placeholder=\\\"Title\\\" [(ngModel)]=\\\"onlineRes.title\\\" name=\\\"title\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput type=\\\"text\\\" placeholder=\\\"Description\\\" [(ngModel)]=\\\"onlineRes.description\\\" name=\\\"description\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <mat-select [(ngModel)]=\\\"onlineRes.subject\\\" name=\\\"subject\\\" placeholder=\\\"Subject\\\">\\n      <mat-option *ngFor=\\\"let subject of subjects\\\" [value]=\\\"subject.name\\\">{{subject.name}}</mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput type=\\\"text\\\" placeholder=\\\"Link\\\" [(ngModel)]=\\\"onlineRes.link\\\" name=\\\"link\\\">\\n  </mat-form-field>\\n  <br/>\\n  <br/>\\n\\n  <div class=\\\"button-row\\\">\\n    <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Save</button>\\n    <button mat-raised-button color=\\\"warn\\\" style=\\\"margin: 10px;\\\" [routerLink]=\\\"['/local-list']\\\">Cancel</button>\\n  </div>\\n  <br/>\\n  <br/>\\n  <br/>\\n\\n</form>\"","import {Component, OnInit} from '@angular/core';\nimport {OnlineResService} from '../../../../services/online_res/online-res.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {SubjectService} from '../../../../services/subject.service';\nimport {MatSnackBar} from '@angular/material';\n\n@Component({\n    selector: 'app-online-edit',\n    templateUrl: './online-edit.component.html',\n    styleUrls: ['./online-edit.component.css']\n})\nexport class OnlineEditComponent implements OnInit {\n\n    onlineRes = {};\n    subjects: Object;\n\n    constructor(private subjectService: SubjectService,\n                private  onlineResService: OnlineResService,\n                private route: Router,\n                private snackBar: MatSnackBar,\n                private activatedRoute: ActivatedRoute) {\n        subjectService.getSubjects().subscribe(subjects => {\n            this.subjects = subjects;\n        });\n    }\n\n    ngOnInit() {\n        this.getOnlineRes(this.activatedRoute.snapshot.params['id']);\n    }\n\n    getOnlineRes(id) {\n        this.onlineResService.getOnlineRes(id).then((res) => {\n            this.onlineRes = res;\n        }, (err) => {\n            console.log(err);\n        });\n    }\n\n    updateOnlineRes(id) {\n        this.onlineResService.editOnlineRes(id, this.onlineRes).then((result) => {\n            this.route.navigate(['/online-list']);\n            this.snackBar.open('Resource updated!', null, {duration: 3000});\n\n        }, (err) => {\n            console.log(err);\n        });\n    }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<h1 class=\\\"mat-h1\\\">Online Resources</h1>\\n<div class=\\\"button-row\\\" *ngIf=\\\"isAdmin\\\">\\n  <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/online-register']\\\" style=\\\"float:right;\\\">New Resource</button>\\n</div>\\n\\n<mat-form-field>\\n  <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n</mat-form-field>\\n\\n<div class=\\\"mat-elevation-z8\\\">\\n  <table *ngIf=\\\"true\\\" mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n    <!-- Number Column -->\\n    <ng-container matColumnDef=\\\"id\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> No.</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.id}}</td>\\n    </ng-container>\\n\\n    <!-- Title Column -->\\n    <ng-container matColumnDef=\\\"title\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Title</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.title}}</td>\\n    </ng-container>\\n\\n\\n    <!-- Email Column -->\\n    <ng-container matColumnDef=\\\"description\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Description</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.description}}</td>\\n    </ng-container>\\n\\n\\n    <!-- Subject Column -->\\n    <ng-container matColumnDef=\\\"subject\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Subject</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.subject}}</td>\\n    </ng-container>\\n\\n    <!-- Link Column -->\\n    <ng-container matColumnDef=\\\"download\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Link</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> <a href=\\\"{{row.link}}\\\" target=\\\"_blank\\\">\\n        {{row.link}}\\n      </a>\\n\\n      </td>\\n    </ng-container>\\n\\n    <!-- Edit Column -->\\n    <ng-container matColumnDef=\\\"edit\\\" *ngIf=\\\"isAdmin\\\" >\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Edit</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"><a  [routerLink]=\\\"['/online-edit', row._id]\\\" >\\n        <mat-icon style=\\\"color: darkgreen\\\">edit</mat-icon>\\n      </a>\\n\\n      </td>\\n    </ng-container>\\n\\n    <!-- Delete Column -->\\n    <ng-container matColumnDef=\\\"delete\\\" *ngIf=\\\"isAdmin\\\" >\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Delete</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"><a  (click)=\\\"deleteRes(row._id, row.id)\\\" >\\n        <mat-icon style=\\\"color: red\\\">delete</mat-icon>\\n      </a>\\n\\n      </td>\\n    </ng-container>\\n\\n\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"isAdmin?displayedColumnsAdmin:displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: isAdmin?displayedColumnsAdmin:displayedColumns;\\\">\\n    </tr>\\n  </table>\\n\\n\\n  <mat-paginator [pageSizeOptions]=\\\"[10, 25, 100]\\\"></mat-paginator>\\n</div>\\n\"","import {OnlineResService} from '../../../../services/online_res/online-res.service';\nimport {Router} from '@angular/router';\n\nimport {Component, ViewChild} from '@angular/core';\nimport {MatPaginator, MatSnackBar, MatSort, MatTableDataSource} from '@angular/material';\nimport {AuthService} from '../../../../services/auth.service';\n\n@Component({\n    selector: 'app-online-list',\n    templateUrl: './online-list.component.html',\n    styleUrls: ['./online-list.component.css']\n})\nexport class OnlineListComponent {\n    displayedColumnsAdmin: string[] = ['id', 'title', 'description', 'subject', 'download', 'edit', 'delete'];\n    displayedColumns: string[] = ['id', 'title', 'description', 'subject', 'download'];\n    dataSource: MatTableDataSource<Object>;\n    isAdmin: boolean;\n\n    isDataLoaded: boolean;\n\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n    @ViewChild(MatSort) sort: MatSort;\n\n    resources: any;\n\n    constructor(private onlineService: OnlineResService, private router: Router, private  authService: AuthService) {\n        this.isDataLoaded = false;\n        this.isAdmin = false;\n\n        this.onlineService.getOnlineRess()\n            .subscribe(resources => {\n                this.resources = [];\n                for (const index in resources) {\n                    this.resources.push({\n                        id: Number(index) + 1,\n                        _id: resources[index]._id,\n                        subject: resources[index].subject,\n                        title: resources[index].title,\n                        description: resources[index].description,\n                        link: resources[index].link\n                    });\n                }\n                this.dataSource = new MatTableDataSource(this.resources);\n                this.dataSource.paginator = this.paginator;\n                this.dataSource.sort = this.sort;\n            });\n        this.isAdmin = this.authService.getUserType() === 'admin';\n    }\n\n    applyFilter(filterValue: string) {\n        this.dataSource.filter = filterValue.trim().toLowerCase();\n\n        if (this.dataSource.paginator) {\n            this.dataSource.paginator.firstPage();\n        }\n    }\n\n    deleteRes(id, index) {\n        this.resources.splice(index - 1, 1);\n        this.dataSource = new MatTableDataSource(this.resources);\n\n        this.onlineService.deleteOnlineRes(id).then((result) => {\n            // this.router.navigate(['/online-list']);\n        }, (err) => {\n            console.log(err);\n        });\n    }\n}\n","module.exports = \"\"","module.exports = \"\\n<h2 class=\\\"mat-h1\\\">New Online Resources</h2>\\n\\n<form (submit)=\\\"onRegisterSubmit(formList)\\\" #formList=\\\"ngForm\\\" class=\\\"example-form\\\" enctype=\\\"multipart/form-data\\\">\\n\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput type=\\\"text\\\" placeholder=\\\"Title\\\" [(ngModel)]=\\\"title\\\" name=\\\"title\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput type=\\\"text\\\" placeholder=\\\"Description\\\" [(ngModel)]=\\\"description\\\" name=\\\"description\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <mat-select [(ngModel)]=\\\"subject\\\" name=\\\"subject\\\" placeholder=\\\"Subject\\\">\\n      <mat-option *ngFor=\\\"let subject of subjects\\\" [value]=\\\"subject.name\\\">{{subject.name}}</mat-option>\\n    </mat-select>\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput type=\\\"text\\\" placeholder=\\\"Link\\\" [(ngModel)]=\\\"link\\\" name=\\\"link\\\">\\n  </mat-form-field>\\n  <br/>\\n  <br/>\\n\\n  <div class=\\\"button-row\\\">\\n    <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Save</button>\\n    <button mat-raised-button color=\\\"warn\\\" style=\\\"margin: 10px;\\\" [routerLink]=\\\"['/local-list']\\\">Cancel</button>\\n  </div>\\n  <br/>\\n  <br/>\\n  <br/>\\n\\n</form>\"","import {Component, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {FlashMessagesService} from 'angular2-flash-messages';\nimport {OnlineResService} from '../../../../services/online_res/online-res.service';\nimport {SubjectService} from '../../../../services/subject.service';\nimport {MatSnackBar} from \"@angular/material\";\n\n@Component({\n    selector: 'app-online-register',\n    templateUrl: './online-register.component.html',\n    styleUrls: ['./online-register.component.css']\n})\nexport class OnlineRegisterComponent implements OnInit {\n    title: String;\n    description: String;\n    subject: String;\n    link: String;\n    subjects: Object;\n\n    constructor(private router: Router,\n                private snackBar: MatSnackBar,\n                private onlineResService: OnlineResService,\n                private subjectService: SubjectService) {\n\n        subjectService.getSubjects().subscribe(subjects => {\n            this.subjects = subjects;\n        });\n    }\n\n    ngOnInit() {\n    }\n\n    onRegisterSubmit(formList: any) {\n        const onlineRes = {\n            title: this.title,\n            description: this.description,\n            subject: this.subject,\n            link: this.link\n        }\n\n        this.onlineResService.registerOnlineRes(onlineRes).subscribe(data => {\n            if (data['success']) {\n                this.snackBar.open('New resource added', null, {duration: 1500});\n                 this.router.navigate(['/online-list']);\n            } else {\n                this.snackBar.open('Something went wrong!', 'Dismiss', {duration: 2000});\n            }\n        });\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<button mat-icon-button [color]=\\\"color\\\" *ngFor=\\\"let ratingId of ratingArr;index as i\\\" [id]=\\\"'star_'+i\\\" (click)=\\\"onClick(i+1)\\\" [matTooltip]=\\\"ratingId+1\\\" matTooltipPosition=\\\"above\\\">\\n  <mat-icon style=\\\"font-size: 28px; \\\">\\n    {{showIcon(i)}}\\n  </mat-icon>\\n</button>\\n<mat-error *ngIf=\\\"starCount == null || starCount == 0\\\">\\n  Star count is <strong>required</strong> and cannot be zero\\n</mat-error>\"","import {Component, OnInit, Input, Output, EventEmitter, ViewEncapsulation} from '@angular/core';\nimport {MatSnackBar} from '@angular/material';\n\n@Component({\n    selector: 'app-star-rating',\n    templateUrl: './star-rating.component.html',\n    styleUrls: ['./star-rating.component.css'],\n    encapsulation: ViewEncapsulation.Emulated\n})\nexport class StarRatingComponent implements OnInit {\n\n    @Input('rating') private rating: number;\n    @Input('starCount') private starCount: number;\n    @Input('color') private color: string;\n    @Output() private ratingUpdated = new EventEmitter();\n\n    private snackBarDuration: number = 2000;\n    private ratingArr = [];\n\n    constructor(private snackBar: MatSnackBar) {\n    }\n\n\n    ngOnInit() {\n        for (let index = 0; index < this.starCount; index++) {\n            this.ratingArr.push(index);\n        }\n    }\n\n    onClick(rating: number) {\n        console.log(rating)\n        // this.snackBar.open('You rated ' + rating + ' / ' + this.starCount, '', {\n        //     duration: this.snackBarDuration\n        // });\n        this.ratingUpdated.emit(rating);\n        return false;\n    }\n\n    showIcon(index: number) {\n        if (this.rating >= index + 1) {\n            return 'star';\n        } else {\n            return 'star_border';\n        }\n    }\n\n}\n\nexport enum StarRatingColor {\n    primary = \"primary\",\n    accent = \"accent\",\n    warn = \"warn\"\n}","module.exports = \"\"","module.exports = \"<link rel=\\\"stylesheet\\\" href=\\\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.6/css/bootstrap.min.css\\\">\\n\\n<div>\\n  <h2 class=\\\"page-header\\\">Student Registration Form</h2>\\n  <form class=\\\"example-form\\\" (submit)=\\\"onRegisterSubmit()\\\">\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput type=\\\"text\\\" placeholder=\\\"Name\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\" >\\n    </mat-form-field>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput type=\\\"email\\\" placeholder=\\\"Email Address\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput type=\\\"password\\\"  placeholder=\\\"Password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\" autocomplete=\\\"true\\\" >\\n    </mat-form-field>\\n\\n\\n    <mat-radio-group (change)=\\\"onChange($event)\\\" name=\\\"gender\\\">\\n      <label style=\\\"color: gray;\\\">Gender : </label>\\n      <mat-radio-button id=\\\"male\\\" name=\\\"male\\\" value=\\\"male\\\" style=\\\"color: gray;\\\"> Male &nbsp;</mat-radio-button>\\n      <mat-radio-button id=\\\"female\\\" name=\\\"female\\\" value=\\\"female\\\" style=\\\"color: gray;\\\"> Female </mat-radio-button>\\n    </mat-radio-group>\\n\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput type=\\\"phone\\\" [(ngModel)]=\\\"phone\\\" name=\\\"phone\\\" placeholder=\\\"Enter phone number\\\">\\n    </mat-form-field>\\n\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput type=\\\"phone\\\" [(ngModel)]=\\\"parents_phone\\\" name=\\\"parents_phone\\\" placeholder=\\\"Parent/Guardian's phone number\\\">\\n    </mat-form-field>\\n\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput type=\\\"text\\\" [(ngModel)]=\\\"country\\\" name=\\\"country\\\" placeholder=\\\"Country of origin\\\">\\n    </mat-form-field>\\n\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput type=\\\"text\\\" [(ngModel)]=\\\"address\\\" name=\\\"address\\\" placeholder=\\\"Address\\\">\\n    </mat-form-field>\\n\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput type=\\\"text\\\" [(ngModel)]=\\\"mentoring_address\\\" name=\\\"mentoring_address\\\" placeholder=\\\"Mentoring Location\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput type=\\\"text\\\" [(ngModel)]=\\\"language\\\" name=\\\"language\\\" placeholder=\\\"language spoken\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput type=\\\"text\\\" [(ngModel)]=\\\"school_level\\\" name=\\\"school_level\\\" placeholder=\\\"Current year level at school\\\">\\n    </mat-form-field>\\n\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput type=\\\"text\\\" [(ngModel)]=\\\"school_name\\\" name=\\\"school_name\\\"  placeholder=\\\"Type your school name\\\">\\n    </mat-form-field>\\n\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput type=\\\"text\\\" [(ngModel)]=\\\"family_situation\\\" name=\\\"family_situation\\\"  placeholder=\\\"Current family situation\\\">\\n    </mat-form-field>\\n\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput type=\\\"text\\\" [(ngModel)]=\\\"english_level\\\" name=\\\"english_level\\\"  placeholder=\\\"Level of english competency.\\\">\\n    </mat-form-field>\\n\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput type=\\\"text\\\" [(ngModel)]=\\\"volunteering\\\" name=\\\"volunteering\\\" placeholder=\\\"Do you have any other experience in volunteering or community work?\\\">\\n    </mat-form-field>\\n\\n    <label style=\\\"color: gray;\\\">Preferred gender of tutor </label>\\n\\n    <mat-radio-group (change)=\\\"onChange($event)\\\" name='tutor_gender'>\\n      <mat-radio-button  name=\\\"tutor_gender\\\" value=\\\"male\\\" style=\\\"color: gray;\\\"> Male &nbsp;</mat-radio-button>\\n      <mat-radio-button  name=\\\"tutor_gender\\\" value=\\\"female\\\" style=\\\"color: gray;\\\"> Female </mat-radio-button>\\n      <mat-radio-button  name=\\\"tutor_gender\\\" value=\\\"No Preference\\\" style=\\\"color: gray;\\\">No Preference</mat-radio-button>\\n    </mat-radio-group>\\n\\n\\n\\n    <br/>\\n    <br/>\\n    <br/>\\n\\n    <div class=\\\"button-row\\\">\\n      <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" >Save</button>\\n    </div>\\n    <br/>\\n    <br/>\\n    <br/>\\n  </form>\\n\\n</div>\\n\"","import {Component} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {ValidateService} from '../../../../services/validate.service';\nimport {StudentService} from '../../../../services/student.service';\nimport {MatRadioChange, MatSnackBar} from '@angular/material';\n\n@Component({\n    selector: 'app-student-register',\n    templateUrl: './student-register.component.html',\n    styleUrls: ['./student-register.component.css']\n})\nexport class StudentRegisterComponent {\n    name: String;\n    password: String;\n    email: String;\n    phone: String;\n    parents_phone: String;\n    country: String;\n    language: String;\n    school_level: String;\n    school_name: String;\n    family_situation: String;\n    english_level: String;\n    tutor_gender: String;\n    gender: String;\n    address: String;\n    mentoring_address: String;\n    volunteering: String;\n\n    constructor(private validateService: ValidateService,\n                private studentService: StudentService,\n                private router: Router,\n                private snackBar: MatSnackBar) {\n    }\n\n\n    onRegisterSubmit() {\n        const student = {\n            name: this.name,\n            email: this.email,\n            password: this.password,\n            phone: this.phone,\n            parents_phone: this.parents_phone,\n            country: this.country,\n            language: this.language,\n            school_level: this.school_level,\n            school_name: this.school_name,\n            family_situation: this.family_situation,\n            english_level: this.english_level,\n            tutor_gender: this.tutor_gender,\n            gender: this.gender,\n            address: this.address,\n            mentoring_address: this.mentoring_address,\n            volunteering: this.volunteering\n        }\n\n        // Required Fields\n        if (!this.validateService.validateRegister(student)) {\n            this.snackBar.open('Please fill in all fields', null, {duration: 3000});\n\n            return false;\n        }\n\n        // Validate Email\n        if (!this.validateService.validateEmail(student.email)) {\n            this.snackBar.open('Please use a valid email', null, {duration: 3000});\n\n            return false;\n        }\n\n        // Register user\n        this.studentService.registerStudent(student).subscribe(data => {\n            if (data['success']) {\n                this.snackBar.open('You are now registered and can now login', null, {duration: 3000});\n                this.router.navigate(['/login']);\n            } else {\n                this.snackBar.open('Something went wrong', null, {duration: 3000});\n                this.router.navigate(['/register']);\n            }\n        });\n    }\n\n    onChange(mrChange: MatRadioChange) {\n        if (mrChange.source.name === 'tutor_gender') {\n            this.tutor_gender = mrChange.source.value;\n        }\n        if (mrChange.source.name === 'gender') {\n            this.gender = mrChange.source.value;\n        }\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<!--<div>-->\\n  <!--<h2 class=\\\"page-header\\\">Student Registration Form</h2>-->\\n  <!--<form (submit)=\\\"updateStudent(student._id)\\\" >-->\\n    <!--<div class=\\\"form-group\\\">-->\\n      <!--<label for=\\\"name\\\">Name</label>-->\\n      <!--<input type=\\\"text\\\" [(ngModel)]=\\\"student.name\\\" name=\\\"name\\\" class=\\\"form-control\\\" placeholder=\\\"Type your name\\\" id=\\\"name\\\">-->\\n    <!--</div>-->\\n    <!--<div class=\\\"form-group\\\">-->\\n      <!--<label for=\\\"email\\\">EmailAddress</label>-->\\n      <!--<input type=\\\"email\\\" [(ngModel)]=\\\"student.email\\\" name=\\\"email\\\"  class=\\\"form-control\\\" placeholder=\\\"Type your email\\\" id=\\\"email\\\">-->\\n    <!--</div>-->\\n    <!--<div class=\\\"form-group\\\">-->\\n      <!--<label class=\\\"text-capitalize\\\">Password</label>-->\\n      <!--<input type=\\\"password\\\" [(ngModel)]=\\\"student.password\\\" name=\\\"password\\\"  class=\\\"form-control\\\" placeholder=\\\"Passwotrd\\\">-->\\n    <!--</div>-->\\n    <!--<div class=\\\"form-group\\\">-->\\n      <!--<label class=\\\"text-capitalize\\\">Gender</label>-->\\n      <!--<div class=\\\"form-check\\\">-->\\n        <!--<div class=\\\"radio\\\">-->\\n          <!--<label for=\\\"radio4\\\" class=\\\"form-check-label text-capitalize\\\">-->\\n            <!--<input type=\\\"radio\\\" [(ngModel)]=\\\"student.gender\\\" name=\\\"gender\\\"  id=\\\"radio4\\\" value=\\\"Male\\\" class=\\\"form-check-input\\\">Male-->\\n          <!--</label>-->\\n        <!--</div>-->\\n        <!--<div class=\\\"radio\\\">-->\\n          <!--<label for=\\\"radio5\\\" class=\\\"form-check-label text-capitalize\\\">-->\\n            <!--<input type=\\\"radio\\\" [(ngModel)]=\\\"student.gender\\\" name=\\\"gender\\\"  id=\\\"radio5\\\" value=\\\"Female\\\" class=\\\"form-check-input\\\">Female-->\\n          <!--</label >-->\\n        <!--</div>-->\\n\\n      <!--</div>-->\\n\\n    <!--</div>-->\\n\\n    <!--<div class=\\\"form-group\\\">-->\\n      <!--<label class=\\\"text-capitalize\\\">Phone number</label>-->\\n      <!--<input type=\\\"text\\\" [(ngModel)]=\\\"student.phone\\\" name=\\\"phone\\\"  class=\\\"form-control\\\" placeholder=\\\"Type your phone number\\\">-->\\n    <!--</div>-->\\n    <!--<div class=\\\"form-group\\\">-->\\n      <!--<label class=\\\"text-capitalize\\\">Parent/Guardian's phone number</label>-->\\n      <!--<input type=\\\"text\\\" [(ngModel)]=\\\"student.parents_phone\\\" name=\\\"parents_phone\\\" class=\\\"form-control\\\" placeholder=\\\"Type the phone number\\\">-->\\n    <!--</div>-->\\n    <!--<div class=\\\"form-group\\\">-->\\n      <!--<label class=\\\"text-capitalize\\\">Country of origin</label>-->\\n      <!--<input type=\\\"text\\\" [(ngModel)]=\\\"student.country\\\" name=\\\"country\\\"  class=\\\"form-control\\\" placeholder=\\\"Ccountry name\\\">-->\\n    <!--</div>-->\\n    <!--<div class=\\\"form-group\\\">-->\\n      <!--<label class=\\\"text-capitalize\\\">Languages spoken</label>-->\\n      <!--<input type=\\\"text\\\"  [(ngModel)]=\\\"student.language\\\" name=\\\"language\\\" class=\\\"form-control\\\" placeholder=\\\"i.e. English, Spanish,...\\\">-->\\n    <!--</div>-->\\n    <!--<div class=\\\"form-group\\\">-->\\n      <!--<label class=\\\"text-capitalize\\\">Current year level at school</label>-->\\n      <!--<input type=\\\"text\\\"  [(ngModel)]=\\\"student.school_level\\\" name=\\\"school_level\\\" class=\\\"form-control\\\" placeholder=\\\"Year level\\\">-->\\n    <!--</div>-->\\n    <!--<div class=\\\"form-group\\\">-->\\n      <!--<label class=\\\"text-capitalize\\\">School name</label>-->\\n      <!--<input type=\\\"text\\\"  [(ngModel)]=\\\"student.school_name\\\" name=\\\"school_name\\\" class=\\\"form-control\\\" placeholder=\\\"Type your school name\\\">-->\\n    <!--</div>-->\\n    <!--<div class=\\\"form-group\\\">-->\\n      <!--<label class=\\\"text-capitalize\\\">Current family situation</label>-->\\n      <!--<input type=\\\"text\\\"   [(ngModel)]=\\\"student.family_situation\\\" name=\\\"family_situation\\\" class=\\\"form-control\\\" placeholder=\\\"i.e. Living with parents,unaccompanied minor etc\\\">-->\\n    <!--</div>-->\\n    <!--<div class=\\\"form-group\\\">-->\\n      <!--<label class=\\\"text-capitalize\\\">Level of english competency</label>-->\\n      <!--<input type=\\\"text\\\"  [(ngModel)]=\\\"student.english_level\\\" name=\\\"english_level\\\" class=\\\"form-control\\\" placeholder=\\\"Level\\\">-->\\n    <!--</div>-->\\n    <!--<div class=\\\"form-group\\\">-->\\n      <!--<label class=\\\"text-capitalize\\\">Preferred gender of tutor</label>-->\\n      <!--<div class=\\\"form-check\\\">-->\\n        <!--<div class=\\\"radio\\\">-->\\n          <!--<label for=\\\"radio1\\\" class=\\\"form-check-label text-capitalize\\\">-->\\n            <!--<input type=\\\"radio\\\"  [(ngModel)]=\\\"student.tutor_gender\\\" name=\\\"tutor_gender\\\" id=\\\"radio1\\\" value=\\\"Male\\\" class=\\\"form-check-input\\\">Male-->\\n          <!--</label>-->\\n        <!--</div>-->\\n        <!--<div class=\\\"radio\\\">-->\\n          <!--<label for=\\\"radio2\\\" class=\\\"form-check-label text-capitalize\\\">-->\\n            <!--<input type=\\\"radio\\\" [(ngModel)]=\\\"student.tutor_gender\\\" name=\\\"tutor_gender\\\" id=\\\"radio2\\\" value=\\\"Female\\\" class=\\\"form-check-input\\\">Female-->\\n          <!--</label >-->\\n        <!--</div>-->\\n        <!--<div class=\\\"radio\\\">-->\\n          <!--<label for=\\\"radio3\\\" class=\\\"form-check-label text-capitalize \\\">-->\\n            <!--<input type=\\\"radio\\\" [(ngModel)]=\\\"student.tutor_gender\\\" name=\\\"tutor_gender\\\" id=\\\"radio3\\\" name=\\\"radios\\\" value=\\\"No Preference\\\" class=\\\"form-check-input\\\">No Preference-->\\n          <!--</label>-->\\n        <!--</div>-->\\n      <!--</div>-->\\n\\n    <!--</div>-->\\n\\n    <!--<input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Submit\\\">-->\\n\\n  <!--</form>-->\\n<!--</div>-->\\n\\n\\n<!--<div>-->\\n<!--<h2 class=\\\"page-header\\\">Student Registration Form</h2>-->\\n<!--<form (submit)=\\\"onRegisterSubmit()\\\" >-->\\n<!--<div class=\\\"form-group\\\">-->\\n<!--<label for=\\\"name\\\">Name</label>-->\\n<!--<input type=\\\"text\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\" class=\\\"form-control\\\" placeholder=\\\"Type your name\\\" id=\\\"name\\\">-->\\n<!--</div>-->\\n<!--<div class=\\\"form-group\\\">-->\\n<!--<label for=\\\"email\\\">EmailAddress</label>-->\\n<!--<input type=\\\"email\\\" [(ngModel)]=\\\"email\\\" name=\\\"email\\\"  class=\\\"form-control\\\" placeholder=\\\"Type your email\\\" id=\\\"email\\\">-->\\n<!--</div>-->\\n<!--<div class=\\\"form-group\\\">-->\\n<!--<label class=\\\"text-capitalize\\\">Password</label>-->\\n<!--<input type=\\\"password\\\" [(ngModel)]=\\\"password\\\" name=\\\"password\\\"  class=\\\"form-control\\\" placeholder=\\\"Passwotrd\\\">-->\\n<!--</div>-->\\n<!--<div class=\\\"form-group\\\">-->\\n<!--<label class=\\\"text-capitalize\\\">Gender</label>-->\\n<!--<div class=\\\"form-check\\\">-->\\n<!--<div class=\\\"radio\\\">-->\\n<!--<label for=\\\"radio4\\\" class=\\\"form-check-label text-capitalize\\\">-->\\n<!--<input type=\\\"radio\\\" [(ngModel)]=\\\"gender\\\" name=\\\"gender\\\"  id=\\\"radio4\\\" value=\\\"Male\\\" class=\\\"form-check-input\\\">Male-->\\n<!--</label>-->\\n<!--</div>-->\\n<!--<div class=\\\"radio\\\">-->\\n<!--<label for=\\\"radio5\\\" class=\\\"form-check-label text-capitalize\\\">-->\\n<!--<input type=\\\"radio\\\" [(ngModel)]=\\\"gender\\\" name=\\\"gender\\\"  id=\\\"radio5\\\" value=\\\"Female\\\" class=\\\"form-check-input\\\">Female-->\\n<!--</label >-->\\n<!--</div>-->\\n\\n<!--</div>-->\\n\\n<!--</div>-->\\n\\n<!--<div class=\\\"form-group\\\">-->\\n<!--<label class=\\\"text-capitalize\\\">Phone number</label>-->\\n<!--<input type=\\\"text\\\" [(ngModel)]=\\\"phone\\\" name=\\\"phone\\\"  class=\\\"form-control\\\" placeholder=\\\"Type your phone number\\\">-->\\n<!--</div>-->\\n<!--<div class=\\\"form-group\\\">-->\\n<!--<label class=\\\"text-capitalize\\\">Parent/Guardian's phone number</label>-->\\n<!--<input type=\\\"text\\\" [(ngModel)]=\\\"parents_phone\\\" name=\\\"parents_phone\\\" class=\\\"form-control\\\" placeholder=\\\"Type the phone number\\\">-->\\n<!--</div>-->\\n<!--<div class=\\\"form-group\\\">-->\\n<!--<label class=\\\"text-capitalize\\\">Country of origin</label>-->\\n<!--<input type=\\\"text\\\" [(ngModel)]=\\\"country\\\" name=\\\"country\\\"  class=\\\"form-control\\\" placeholder=\\\"Country name\\\">-->\\n<!--</div>-->\\n<!--<div class=\\\"form-group\\\">-->\\n<!--<label class=\\\"text-capitalize\\\">Address</label>-->\\n<!--<input type=\\\"text\\\" [(ngModel)]=\\\"address\\\" name=\\\"address\\\"  class=\\\"form-control\\\" placeholder=\\\"Address (i.e.: City, State, Zip Code)\\\">-->\\n<!--</div>-->\\n<!--<div class=\\\"form-group\\\">-->\\n<!--<label class=\\\"text-capitalize\\\">Mentoring Location</label>-->\\n<!--<input type=\\\"text\\\" [(ngModel)]=\\\"mentoring_address\\\" name=\\\"mentoring_address\\\"  class=\\\"form-control\\\" placeholder=\\\"Location (i.e.: Home, School, ...)\\\">-->\\n<!--</div>-->\\n<!--<div class=\\\"form-group\\\">-->\\n<!--<label class=\\\"text-capitalize\\\">Languages spoken</label>-->\\n<!--<input type=\\\"text\\\"  [(ngModel)]=\\\"language\\\" name=\\\"language\\\" class=\\\"form-control\\\" placeholder=\\\"i.e. English, Spanish,...\\\">-->\\n<!--</div>-->\\n<!--<div class=\\\"form-group\\\">-->\\n<!--<label class=\\\"text-capitalize\\\">Current year level at school</label>-->\\n<!--<input type=\\\"text\\\"  [(ngModel)]=\\\"school_level\\\" name=\\\"school_level\\\" class=\\\"form-control\\\" placeholder=\\\"Year level\\\">-->\\n<!--</div>-->\\n<!--<div class=\\\"form-group\\\">-->\\n<!--<label class=\\\"text-capitalize\\\">School name</label>-->\\n<!--<input type=\\\"text\\\"  [(ngModel)]=\\\"school_name\\\" name=\\\"school_name\\\" class=\\\"form-control\\\" placeholder=\\\"Type your school name\\\">-->\\n<!--</div>-->\\n<!--<div class=\\\"form-group\\\">-->\\n<!--<label class=\\\"text-capitalize\\\">Current family situation</label>-->\\n<!--<input type=\\\"text\\\"   [(ngModel)]=\\\"family_situation\\\" name=\\\"family_situation\\\" class=\\\"form-control\\\" placeholder=\\\"i.e. Living with parents,unaccompanied minor etc\\\">-->\\n<!--</div>-->\\n<!--<div class=\\\"form-group\\\">-->\\n<!--<label class=\\\"text-capitalize\\\">Level of english competency</label>-->\\n<!--<input type=\\\"text\\\"  [(ngModel)]=\\\"english_level\\\" name=\\\"english_level\\\" class=\\\"form-control\\\" placeholder=\\\"Level\\\">-->\\n<!--</div>-->\\n<!--<div class=\\\"form-group\\\">-->\\n<!--<label class=\\\"text-capitalize\\\">Preferred gender of tutor</label>-->\\n<!--<div class=\\\"form-check\\\">-->\\n<!--<div class=\\\"radio\\\">-->\\n<!--<label for=\\\"radio1\\\" class=\\\"form-check-label text-capitalize\\\">-->\\n<!--<input type=\\\"radio\\\"  [(ngModel)]=\\\"tutor_gender\\\" name=\\\"tutor_gender\\\" id=\\\"radio1\\\" value=\\\"Male\\\" class=\\\"form-check-input\\\">Male-->\\n<!--</label>-->\\n<!--</div>-->\\n<!--<div class=\\\"radio\\\">-->\\n<!--<label for=\\\"radio2\\\" class=\\\"form-check-label text-capitalize\\\">-->\\n<!--<input type=\\\"radio\\\" [(ngModel)]=\\\"tutor_gender\\\" name=\\\"tutor_gender\\\" id=\\\"radio2\\\" value=\\\"Female\\\" class=\\\"form-check-input\\\">Female-->\\n<!--</label >-->\\n<!--</div>-->\\n<!--<div class=\\\"radio\\\">-->\\n<!--<label for=\\\"radio3\\\" class=\\\"form-check-label text-capitalize \\\">-->\\n<!--<input type=\\\"radio\\\" [(ngModel)]=\\\"tutor_gender\\\" name=\\\"tutor_gender\\\" id=\\\"radio3\\\" name=\\\"radios\\\" value=\\\"No Preference\\\" class=\\\"form-check-input\\\">No Preference-->\\n<!--</label>-->\\n<!--</div>-->\\n<!--</div>-->\\n\\n<!--</div>-->\\n\\n<!--<input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Submit\\\">-->\\n\\n<!--</form>-->\\n<!--</div>-->\\n<div>\\n  <h2 class=\\\"page-header\\\">Student Update Form</h2>\\n  <form class=\\\"example-form\\\" (submit)=\\\"updateStudent(student._id)\\\">\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput type=\\\"text\\\" placeholder=\\\"Name\\\" [(ngModel)]=\\\"student.name\\\" name=\\\"name\\\" >\\n    </mat-form-field>\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput type=\\\"email\\\" placeholder=\\\"Email Address\\\" [(ngModel)]=\\\"student.email\\\" name=\\\"email\\\">\\n    </mat-form-field>\\n\\n    <mat-radio-group (change)=\\\"onChange($event)\\\" name=\\\"gender\\\">\\n      <label style=\\\"color: gray;\\\">Gender : </label>\\n      <mat-radio-button id=\\\"male\\\" checked=\\\"{{student.gender=='male'}}\\\"  name=\\\"male\\\" value=\\\"male\\\" style=\\\"color: gray;\\\"> Male &nbsp;</mat-radio-button>\\n      <mat-radio-button id=\\\"female\\\" checked=\\\"{{student.gender=='female'}}\\\"  name=\\\"female\\\" value=\\\"female\\\" style=\\\"color: gray;\\\"> Female </mat-radio-button>\\n    </mat-radio-group>\\n\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput type=\\\"phone\\\" [(ngModel)]=\\\"student.phone\\\" name=\\\"phone\\\" placeholder=\\\"Enter phone number\\\">\\n    </mat-form-field>\\n\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput type=\\\"phone\\\" [(ngModel)]=\\\"student.parents_phone\\\" name=\\\"parents_phone\\\" placeholder=\\\"Parent/Guardian's phone number\\\">\\n    </mat-form-field>\\n\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput type=\\\"text\\\" [(ngModel)]=\\\"student.country\\\" name=\\\"country\\\" placeholder=\\\"Country of origin\\\">\\n    </mat-form-field>\\n\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput type=\\\"text\\\" [(ngModel)]=\\\"student.address\\\" name=\\\"address\\\" placeholder=\\\"Address\\\">\\n    </mat-form-field>\\n\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput type=\\\"text\\\" [(ngModel)]=\\\"student.mentoring_address\\\" name=\\\"mentoring_address\\\" placeholder=\\\"Mentoring Location\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput type=\\\"text\\\" [(ngModel)]=\\\"student.language\\\" name=\\\"language\\\" placeholder=\\\"language spoken\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput type=\\\"text\\\" [(ngModel)]=\\\"student.school_level\\\" name=\\\"school_level\\\" placeholder=\\\"Current year level at school\\\">\\n    </mat-form-field>\\n\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput type=\\\"text\\\" [(ngModel)]=\\\"student.school_name\\\" name=\\\"school_name\\\"  placeholder=\\\"Type your school name\\\">\\n    </mat-form-field>\\n\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput type=\\\"text\\\" [(ngModel)]=\\\"student.family_situation\\\" name=\\\"family_situation\\\"  placeholder=\\\"Current family situation\\\">\\n    </mat-form-field>\\n\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput type=\\\"text\\\" [(ngModel)]=\\\"student.english_level\\\" name=\\\"english_level\\\"  placeholder=\\\"Level of english competency.\\\">\\n    </mat-form-field>\\n\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n      <input matInput type=\\\"text\\\" [(ngModel)]=\\\"student.volunteering\\\" name=\\\"volunteering\\\" placeholder=\\\"Do you have any other experience in volunteering or community work?\\\">\\n    </mat-form-field>\\n\\n    <label style=\\\"color: gray;\\\">Preferred gender of tutor </label>\\n\\n    <mat-radio-group (change)=\\\"onChange($event)\\\" name='tutor_gender'>\\n      <mat-radio-button checked=\\\"{{student.tutor_gender=='male'}}\\\"  name=\\\"tutor_gender\\\" value=\\\"male\\\" style=\\\"color: gray;\\\"> Male &nbsp;</mat-radio-button>\\n      <mat-radio-button checked=\\\"{{student.tutor_gender=='female'}}\\\" name=\\\"tutor_gender\\\" value=\\\"female\\\" style=\\\"color: gray;\\\"> Female </mat-radio-button>\\n      <mat-radio-button checked=\\\"{{student.tutor_gender=='No Preference'}}\\\" name=\\\"tutor_gender\\\" value=\\\"No Preference\\\" style=\\\"color: gray;\\\">No Preference</mat-radio-button>\\n    </mat-radio-group>\\n\\n\\n\\n    <br/>\\n    <br/>\\n    <br/>\\n\\n    <div class=\\\"button-row\\\">\\n      <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\" >Save</button>\\n    </div>\\n    <br/>\\n    <br/>\\n    <br/>\\n  </form>\\n\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {StudentService} from '../../../services/student.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {MatRadioChange, MatSnackBar} from '@angular/material';\n\n@Component({\n    selector: 'app-student-edit',\n    templateUrl: './student-edit.component.html',\n    styleUrls: ['./student-edit.component.css']\n})\nexport class StudentEditComponent implements OnInit {\n\n    student = {};\n\n    constructor(private  studentService: StudentService,\n                private route: Router,\n                private activatedRoute: ActivatedRoute,\n                private snackBar: MatSnackBar) {\n\n    }\n\n    ngOnInit() {\n        this.getStudent(this.activatedRoute.snapshot.params['id']);\n    }\n\n    getStudent(id) {\n        this.studentService.getStudent(id).then((res) => {\n            this.student = res;\n        }, (err) => {\n            console.log(err);\n        });\n    }\n\n    updateStudent(id) {\n        this.studentService.editStudent(id, this.student).then((result) => {\n            let id = result['_id'];\n            this.route.navigate(['/student-list']);\n            this.snackBar.open('Student updated!', null, {duration: 2000});\n\n        }, (err) => {\n            console.log(err);\n        });\n    }\n\n    onChange(mrChange: MatRadioChange) {\n        if (mrChange.source.name === 'tutor_gender') {\n            this.student['tutor_gender'] = mrChange.source.value;\n        }\n        if (mrChange.source.name === 'gender') {\n            this.student['gender'] = mrChange.source.value;\n        }\n    }\n\n\n}\n","module.exports = \"\"","module.exports = \"<h1 class=\\\"mat-h1\\\">Registered Students</h1>\\n\\n<mat-form-field>\\n  <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n</mat-form-field>\\n\\n<div class=\\\"mat-elevation-z8\\\">\\n  <table *ngIf=\\\"true\\\" mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n    <!-- Number Column -->\\n    <ng-container matColumnDef=\\\"id\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> No.</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.id}}</td>\\n    </ng-container>\\n\\n    <!-- Name Column -->\\n    <ng-container matColumnDef=\\\"name\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Name</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.name}}</td>\\n    </ng-container>\\n\\n    <!-- Email Column -->\\n    <ng-container matColumnDef=\\\"email\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Email</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.email}}</td>\\n    </ng-container>\\n    <!-- Phone Column -->\\n    <ng-container matColumnDef=\\\"phone\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Phone</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.phone}}</td>\\n    </ng-container>\\n    <!-- Gender Column -->\\n    <ng-container matColumnDef=\\\"gender\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Gender</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.gender}}</td>\\n    </ng-container>\\n    <!-- Status Column -->\\n    <ng-container matColumnDef=\\\"status\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Status</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> {{row.status}}</td>\\n    </ng-container>\\n    <!-- Edit Column -->\\n    <ng-container matColumnDef=\\\"edit\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Edit</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"> <a [routerLink]=\\\"['/student-edit', row._id]\\\">\\n        <mat-icon style=\\\"color: darkgreen\\\">edit</mat-icon>\\n      </a>\\n\\n      </td>\\n    </ng-container>\\n\\n    <!-- Delete Column -->\\n    <ng-container matColumnDef=\\\"delete\\\">\\n      <th mat-header-cell *matHeaderCellDef mat-sort-header> Delete</th>\\n      <td mat-cell *matCellDef=\\\"let row\\\"><a [routerLink]=\\\"['/student-list', row._id]\\\" (click)=\\\"deleteStudent(row._id)\\\" >\\n        <mat-icon style=\\\"color: red\\\">delete</mat-icon>\\n      </a>\\n\\n      </td>\\n    </ng-container>\\n\\n    <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n    <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n    </tr>\\n  </table>\\n\\n\\n  <mat-paginator [pageSizeOptions]=\\\"[10, 25, 100]\\\"></mat-paginator>\\n</div>\\n\"","import {StudentService} from '../../../services/student.service';\nimport {Router} from '@angular/router';\nimport {Component, ViewChild} from '@angular/core';\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\n\n@Component({\n    selector: 'app-student-list',\n    templateUrl: './student-list.component.html',\n    styleUrls: ['./student-list.component.css']\n})\nexport class StudentListComponent {\n    displayedColumns: string[] = ['id', 'name', 'email', 'phone', 'gender', 'status', 'edit', 'delete'];\n    dataSource: MatTableDataSource<Object>;\n    isDataLoaded: boolean;\n\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n    @ViewChild(MatSort) sort: MatSort;\n\n    users: any;\n    students: any;\n    i = 0;\n\n    constructor(private studentService: StudentService, private router: Router) {\n        this.isDataLoaded = false;\n\n        this.studentService.getStudents()\n            .subscribe(students => {\n                this.students = students;\n                this.users = [];\n                for (this.i = 0; this.i < this.students.length; this.i++) {\n                    this.users.push({\n                        id: this.i + 1,\n                        _id: this.students[this.i]._id,\n                        name: this.students[this.i].name,\n                        email: this.students[this.i].email,\n                        phone: this.students[this.i].phone,\n                        gender: this.students[this.i].gender,\n                        status: this.students[this.i].status,\n                        edit: '',\n                        delete: ''\n                    });\n                }\n                this.dataSource = new MatTableDataSource(this.users);\n                this.dataSource.paginator = this.paginator;\n                this.dataSource.sort = this.sort;\n            });\n    }\n\n\n    applyFilter(filterValue: string) {\n        this.dataSource.filter = filterValue.trim().toLowerCase();\n        if (this.dataSource.paginator) {\n            this.dataSource.paginator.firstPage();\n        }\n    }\n\n    deleteStudent(id) {\n        this.studentService.deleteStudent(id).then((result) => {\n            this.router.navigate(['/student-list']);\n        }, (err) => {\n            console.log(err);\n        });\n    }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<h2 class=\\\"page-header\\\">Subject Edit</h2>\\n\\n<form (submit)=\\\"updateSubject(subject._id)\\\" class=\\\"example-form\\\">\\n\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput type=\\\"text\\\" placeholder=\\\"Name\\\" [(ngModel)]=\\\"subject.name\\\" name=\\\"name\\\">\\n  </mat-form-field>\\n\\n\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput type=\\\"text\\\" placeholder=\\\"Sections\\\" [(ngModel)]=\\\"subject.sections\\\" name=\\\"sections\\\">\\n  </mat-form-field>\\n\\n  <mat-form-field class=\\\"example-full-width\\\">\\n    <input matInput type=\\\"text\\\" placeholder=\\\"Description\\\" [(ngModel)]=\\\"subject.description\\\" name=\\\"description\\\">\\n  </mat-form-field>\\n\\n  <br/>\\n  <br/>\\n  <br/>\\n\\n  <div class=\\\"button-row\\\">\\n    <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Save</button>\\n  </div>\\n  <br/>\\n  <br/>\\n  <br/>\\n\\n</form>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {SubjectService} from '../../../services/subject.service';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {MatSnackBar} from '@angular/material';\n\n\n@Component({\n    selector: 'app-subject-edit',\n    templateUrl: './subject-edit.component.html',\n    styleUrls: ['./subject-edit.component.css']\n})\nexport class SubjectEditComponent implements OnInit {\n\n    subject = {};\n\n    constructor(private  subjectService: SubjectService,\n                private route: Router,\n                private activatedRoute: ActivatedRoute,\n                private snackBar: MatSnackBar) {\n    }\n\n    ngOnInit() {\n        this.getSubject(this.activatedRoute.snapshot.params['id']);\n    }\n\n    getSubject(id) {\n        this.subjectService.getSubject(id).then((res) => {\n            this.subject = res;\n        }, (err) => {\n            console.log(err);\n        });\n    }\n\n    updateSubject(id) {\n        this.subjectService.editSubject(id, this.subject).then((result) => {\n            let id = result['_id'];\n            this.route.navigate(['/subject-list']);\n            this.snackBar.open('Subject updated!', null, {duration: 3000});\n\n        }, (err) => {\n            console.log(err);\n        });\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<h1 class=\\\"mat-h1\\\">HBE Subjects</h1>\\n<div class=\\\"button-row\\\">\\n    <button mat-raised-button color=\\\"primary\\\" [routerLink]=\\\"['/subject-register']\\\" style=\\\"float:right;\\\">Add New\\n        Subject\\n    </button>\\n</div>\\n\\n\\n<mat-form-field>\\n    <input matInput (keyup)=\\\"applyFilter($event.target.value)\\\" placeholder=\\\"Filter\\\">\\n</mat-form-field>\\n\\n<div class=\\\"mat-elevation-z8\\\">\\n    <table *ngIf=\\\"true\\\" mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n        <!-- Number Column -->\\n        <ng-container matColumnDef=\\\"id\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> No.</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.id}}</td>\\n        </ng-container>\\n\\n        <!-- Name Column -->\\n        <ng-container matColumnDef=\\\"name\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Name</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.name}}</td>\\n        </ng-container>\\n\\n        <!-- Email Column -->\\n        <ng-container matColumnDef=\\\"sections\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Sections</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\"> {{row.sections}}</td>\\n        </ng-container>\\n        <!-- Edit Column -->\\n        <ng-container matColumnDef=\\\"edit\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Edit</th>\\n            <td mat-cell *matCellDef=\\\"let row\\\"><a [routerLink]=\\\"['/subject-edit', row._id]\\\">\\n                <mat-icon style=\\\"color: darkgreen\\\">edit</mat-icon>\\n            </a>\\n\\n            </td>\\n        </ng-container>\\n\\n        <!-- Delete Column -->\\n        <!--<ng-container matColumnDef=\\\"delete\\\">-->\\n            <!--<th mat-header-cell *matHeaderCellDef mat-sort-header> Delete</th>-->\\n            <!--<td mat-cell *matCellDef=\\\"let row\\\">-->\\n                <!--<a-->\\n                   <!--(click)=\\\"deleteSubject(row._id)\\\">-->\\n                    <!--<mat-icon style=\\\"color: red\\\">delete</mat-icon>-->\\n                <!--</a>-->\\n                <!--&lt;!&ndash;<button mat-button (click)=\\\"openDialog()\\\">Open dialog</button>&ndash;&gt;-->\\n            <!--</td>-->\\n        <!--</ng-container>-->\\n\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\">\\n        </tr>\\n    </table>\\n    <mat-paginator [pageSizeOptions]=\\\"[5, 10, 25, 100]\\\"></mat-paginator>\\n</div>\\n\"","import {Router} from '@angular/router';\nimport {SubjectService} from '../../../services/subject.service';\n\nimport {Component, ViewChild} from '@angular/core';\nimport {MatPaginator, MatSort, MatTableDataSource} from '@angular/material';\nimport {MatDialog} from '@angular/material';\nimport {SubjectRegisterComponent} from '../subject-register/subject-register.component';\n\n\n\n\n@Component({\n    selector: 'app-subject-list',\n    templateUrl: './subject-list.component.html',\n    styleUrls: ['./subject-list.component.css']\n})\n\n\nexport class SubjectListComponent {\n\n    subjects: any;\n    displayedColumns: string[] = ['id', 'name', 'sections', 'edit'];\n    dataSource: MatTableDataSource<Object>;\n    subjectArray: any;\n    isDataLoaded: boolean;\n\n    @ViewChild(MatPaginator) paginator: MatPaginator;\n    @ViewChild(MatSort) sort: MatSort;\n    i = 0;\n\n    constructor(private subjectService: SubjectService,\n                private dialog: MatDialog,\n                private router: Router) {\n        this.isDataLoaded = false;\n        this.subjectService.getSubjects()\n            .subscribe(subjects => {\n                this.subjects = subjects;\n                this.subjectArray = [];\n                for (this.i = 0; this.i < this.subjects.length; this.i++) {\n                    this.subjectArray.push({\n                        id: this.i + 1,\n                        _id: this.subjects[this.i]._id,\n                        name: this.subjects[this.i].name,\n                        sections: this.subjects[this.i].sections,\n                        edit: '',\n                        delete: ''\n                    });\n                }\n\n                this.dataSource = new MatTableDataSource(this.subjectArray);\n                this.dataSource.paginator = this.paginator;\n                this.dataSource.sort = this.sort;\n            });\n    }\n\n\n    openDialog() {\n        this.dialog.open(SubjectRegisterComponent);\n    }\n\n    applyFilter(filterValue: string) {\n        this.dataSource.filter = filterValue.trim().toLowerCase();\n        if (this.dataSource.paginator) {\n            this.dataSource.paginator.firstPage();\n        }\n    }\n\n    deleteSubject(id) {\n        this.subjectService.deleteSubject(id).then((result) => {\n            this.router.navigate(['/subject-list']);\n        }, (err) => {\n            console.log(err);\n        });\n    }\n\n}\n\n// @Component({\n//     selector: 'app-dialog-overview-example-dialog',\n//     templateUrl: 'dialog-overview-example-dialog.html',\n// })\n// export class DialogOverviewExampleDialogComponent {\n//\n//     constructor(public dialogRef: MatDialogRef<DialogOverviewExampleDialogComponent>,\n//                 @Inject(MAT_DIALOG_DATA) public data: DialogData) {\n//     }\n//\n//     onNoClick(): void {\n//         this.dialogRef.close();\n//     }\n//\n// }\n\n","module.exports = \"\"","module.exports = \"<h2 class=\\\"page-header\\\">Subject Registration</h2>\\n\\n<form (submit)=\\\"onRegisterSubmit(formList)\\\" #formList=\\\"ngForm\\\" class=\\\"example-form\\\">\\n\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Name\\\" [(ngModel)]=\\\"name\\\" name=\\\"name\\\">\\n    </mat-form-field>\\n\\n\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Sections\\\" [(ngModel)]=\\\"sections\\\" name=\\\"sections\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Description\\\" [(ngModel)]=\\\"description\\\" name=\\\"description\\\">\\n    </mat-form-field>\\n\\n    <br/>\\n    <br/>\\n    <br/>\\n\\n    <div class=\\\"button-row\\\">\\n        <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Save</button>\\n    </div>\\n    <br/>\\n    <br/>\\n    <br/>\\n\\n</form>\"","import {Component} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {SubjectService} from '../../../services/subject.service';\nimport {MatSnackBar} from '@angular/material';\n\n@Component({\n    selector: 'app-subject-register',\n    templateUrl: './subject-register.component.html',\n    styleUrls: ['./subject-register.component.css']\n})\nexport class SubjectRegisterComponent {\n\n    name: String;\n    description: String;\n    sections: String;\n\n    constructor(private router: Router,\n                private snackBar: MatSnackBar,\n                private subjectService: SubjectService) {\n    }\n\n    onRegisterSubmit(formList: any) {\n        const subject = {\n            name: this.name,\n            description: this.description,\n            sections: this.sections\n        }\n\n        this.subjectService.registerSubject(subject).subscribe(data => {\n            if (data['success']) {\n                this.snackBar.open('New subject is added!', 'Dismiss', {duration: 2000});\n                this.router.navigate(['/subject-list']);\n            } else {\n                this.snackBar.open('Something went wrong!', 'Dismiss', {duration: 2000});\n            }\n        });\n    }\n\n}\n","module.exports = \"\"","module.exports = \"<h2 class=\\\"mat-h1\\\">New Survey</h2>\\n\\n<form (submit)=\\\"onSubmit()\\\" class=\\\"example-form\\\">\\n\\n    <mat-form-field>\\n        <input matInput [matDatepicker]=\\\"picker\\\" [(ngModel)]=\\\"date\\\" name=\\\"date\\\" placeholder=\\\"Choose a date\\\">\\n        <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\n        <mat-datepicker #picker></mat-datepicker>\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Subject\\\" disabled value=\\\"{{subject}}\\\" name=\\\"subject\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n        <input matInput type=\\\"text\\\" placeholder=\\\"Mentor\\\" disabled value=\\\"{{mentor}}\\\" name=\\\"mentor\\\">\\n    </mat-form-field>\\n\\n    <mat-form-field class=\\\"example-full-width\\\">\\n        <textarea matInput rows=\\\"10\\\" type=\\\"textarea\\\" placeholder=\\\"Comment\\\" [(ngModel)]=\\\"comment\\\"\\n                  name=\\\"comment\\\"></textarea>\\n    </mat-form-field>\\n\\n    <mat-label>Rate your mentor:</mat-label>\\n    <app-star-rating [rating]=\\\"rating\\\" [starCount]=\\\"starCount\\\" [color]=\\\"starColor\\\"\\n                     (ratingUpdated)=\\\"onRatingChanged($event)\\\"></app-star-rating>\\n\\n    <br/>\\n    <br/>\\n    <br/>\\n\\n    <div class=\\\"button-row\\\">\\n        <button mat-raised-button color=\\\"primary\\\" type=\\\"submit\\\">Submit</button>\\n    </div>\\n    <br/>\\n    <br/>\\n    <br/>\\n\\n\\n</form>\\n\"","import {Component, OnInit, Input, Output, EventEmitter, ViewEncapsulation} from '@angular/core';\nimport {ActivatedRoute, Router} from '@angular/router';\nimport {StudentSubjectService} from '../../../services/student-subject/student-subject.service';\nimport {MatSnackBar} from '@angular/material';\nimport {SurveyService} from '../../../services/survey/survey.service';\n\n@Component({\n    selector: 'app-create-survey',\n    templateUrl: './create-survey.component.html',\n    styleUrls: ['./create-survey.component.css'],\n    encapsulation: ViewEncapsulation.Emulated\n})\nexport class CreateSurveyComponent implements OnInit {\n    @Input('rating') rating: number;\n    @Input('starCount') starCount: number;\n    @Input('color') starColor: string;\n\n    studentSubject: any;\n    date: any;\n    comment: any;\n    mentor: any;\n    subject: any;\n\n    constructor(private activatedRoute: ActivatedRoute,\n                private snackBar: MatSnackBar,\n                private router: Router,\n                private surveySerive: SurveyService,\n                private studentSubjectService: StudentSubjectService) {\n        this.studentSubjectService.getStudentSubjectsById(this.activatedRoute.snapshot.params['id']).subscribe(data => {\n            this.studentSubject = data;\n            this.subject = this.studentSubject[0].subject[0].name;\n            this.mentor = this.studentSubject[0].mentor[0].name;\n            console.log(data);\n        });\n\n    }\n\n    ngOnInit() {\n        this.starCount = 5;\n        this.starColor = StarRatingColor.accent;\n    }\n\n    onRatingChanged(rating) {\n        console.log(rating);\n        this.rating = rating;\n    }\n\n    onSubmit() {\n        const survey = {\n            student_subject: this.studentSubject[0]._id,\n            date: this.date,\n            comment: this.comment,\n            rating: this.rating\n        };\n        console.log(survey);\n        this.surveySerive.registerSurvey(survey).subscribe(data => {\n            if (data['success']) {\n                this.snackBar.open('Survey recorded', null, {duration: 1500});\n                this.router.navigate(['/student-dashboard']);\n            } else {\n                this.snackBar.open('Something went wrong', 'Dismiss', {duration: 2000});\n            }\n        });\n    }\n\n\n}\n\n\nexport enum StarRatingColor {\n    primary = 'primary',\n    accent = 'accent',\n    warn = 'warn'\n}\n","import { DataSource } from '@angular/cdk/collections';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { map } from 'rxjs/operators';\nimport { Observable, of as observableOf, merge } from 'rxjs';\n\n// TODO: Replace this with your own data model type\nexport interface DataTableItem {\n  name: string;\n  id: number;\n}\n\n// TODO: replace this with real data from your application\nconst EXAMPLE_DATA: DataTableItem[] = [\n  {id: 1, name: 'Hydrogen'},\n  {id: 2, name: 'Helium'},\n  {id: 3, name: 'Lithium'},\n  {id: 4, name: 'Beryllium'},\n  {id: 5, name: 'Boron'},\n  {id: 6, name: 'Carbon'},\n  {id: 7, name: 'Nitrogen'},\n  {id: 8, name: 'Oxygen'},\n  {id: 9, name: 'Fluorine'},\n  {id: 10, name: 'Neon'},\n  {id: 11, name: 'Sodium'},\n  {id: 12, name: 'Magnesium'},\n  {id: 13, name: 'Aluminum'},\n  {id: 14, name: 'Silicon'},\n  {id: 15, name: 'Phosphorus'},\n  {id: 16, name: 'Sulfur'},\n  {id: 17, name: 'Chlorine'},\n  {id: 18, name: 'Argon'},\n  {id: 19, name: 'Potassium'},\n  {id: 20, name: 'Calcium'},\n  {id: 20, name: 'Calcium'},\n  {id: 20, name: 'Calcium'},\n  {id: 20, name: 'Calcium'},\n  {id: 20, name: 'Calcium'},\n  {id: 20, name: 'Calcium'},\n  {id: 20, name: 'Calcium'},\n  {id: 20, name: 'Calcium'},\n  {id: 20, name: 'Calcium'},\n  {id: 20, name: 'Calcium'},\n  {id: 20, name: 'Calcium'},\n  {id: 20, name: 'Calcium'},\n  {id: 20, name: 'Calcium'},\n];\n\n/**\n * Data source for the DataTable view. This class should\n * encapsulate all logic for fetching and manipulating the displayed data\n * (including sorting, pagination, and filtering).\n */\nexport class DataTableDataSource extends DataSource<DataTableItem> {\n  data: DataTableItem[] = EXAMPLE_DATA;\n\n  constructor(private paginator: MatPaginator, private sort: MatSort) {\n    super();\n  }\n\n  /**\n   * Connect this data source to the table. The table will only update when\n   * the returned stream emits new items.\n   * @returns A stream of the items to be rendered.\n   */\n  connect(): Observable<DataTableItem[]> {\n    // Combine everything that affects the rendered data into one update\n    // stream for the data-table to consume.\n    const dataMutations = [\n      observableOf(this.data),\n      this.paginator.page,\n      this.sort.sortChange\n    ];\n\n    // Set the paginators length\n    this.paginator.length = this.data.length;\n\n    return merge(...dataMutations).pipe(map(() => {\n      return this.getPagedData(this.getSortedData([...this.data]));\n    }));\n  }\n\n  /**\n   *  Called when the table is being destroyed. Use this function, to clean up\n   * any open connections or free any held resources that were set up during connect.\n   */\n  disconnect() {}\n\n  /**\n   * Paginate the data (client-side). If you're using server-side pagination,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getPagedData(data: DataTableItem[]) {\n    const startIndex = this.paginator.pageIndex * this.paginator.pageSize;\n    return data.splice(startIndex, this.paginator.pageSize);\n  }\n\n  /**\n   * Sort the data (client-side). If you're using server-side sorting,\n   * this would be replaced by requesting the appropriate data from the server.\n   */\n  private getSortedData(data: DataTableItem[]) {\n    if (!this.sort.active || this.sort.direction === '') {\n      return data;\n    }\n\n    return data.sort((a, b) => {\n      const isAsc = this.sort.direction === 'asc';\n      switch (this.sort.active) {\n        case 'name': return compare(a.name, b.name, isAsc);\n        case 'id': return compare(+a.id, +b.id, isAsc);\n        default: return 0;\n      }\n    });\n  }\n}\n\n/** Simple sort comparator for example ID/Name columns (for client-side sorting). */\nfunction compare(a, b, isAsc) {\n  return (a < b ? -1 : 1) * (isAsc ? 1 : -1);\n}\n","module.exports = \".data-table{\\n    width:80%;\\n    margin: 20px auto;\\n}\"","module.exports = \"\\n\\n<div class=\\\"unit w-2-3\\\"><div class=\\\"hero-callout\\\">\\n  <table id=\\\"example\\\" class=\\\"display\\\" style=\\\"width:100%\\\"><thead><tr><th>Name</th><th>Position</th><th>Office</th><th>Age</th><th>Start date</th><th>Salary</th></tr></thead><tbody><tr><td>Tiger Nixon</td><td>System Architect</td><td>Edinburgh</td><td>61</td><td>2011/04/25</td><td>$320,800</td></tr><tr><td>Garrett Winters</td><td>Accountant</td><td>Tokyo</td><td>63</td><td>2011/07/25</td><td>$170,750</td></tr><tr><td>Ashton Cox</td><td>Junior Technical Author</td><td>San Francisco</td><td>66</td><td>2009/01/12</td><td>$86,000</td></tr><tr><td>Cedric Kelly</td><td>Senior Javascript Developer</td><td>Edinburgh</td><td>22</td><td>2012/03/29</td><td>$433,060</td></tr><tr><td>Airi Satou</td><td>Accountant</td><td>Tokyo</td><td>33</td><td>2008/11/28</td><td>$162,700</td></tr><tr><td>Brielle Williamson</td><td>Integration Specialist</td><td>New York</td><td>61</td><td>2012/12/02</td><td>$372,000</td></tr><tr><td>Herrod Chandler</td><td>Sales Assistant</td><td>San Francisco</td><td>59</td><td>2012/08/06</td><td>$137,500</td></tr><tr><td>Rhona Davidson</td><td>Integration Specialist</td><td>Tokyo</td><td>55</td><td>2010/10/14</td><td>$327,900</td></tr><tr><td>Colleen Hurst</td><td>Javascript Developer</td><td>San Francisco</td><td>39</td><td>2009/09/15</td><td>$205,500</td></tr><tr><td>Sonya Frost</td><td>Software Engineer</td><td>Edinburgh</td><td>23</td><td>2008/12/13</td><td>$103,600</td></tr><tr><td>Jena Gaines</td><td>Office Manager</td><td>London</td><td>30</td><td>2008/12/19</td><td>$90,560</td></tr><tr><td>Quinn Flynn</td><td>Support Lead</td><td>Edinburgh</td><td>22</td><td>2013/03/03</td><td>$342,000</td></tr><tr><td>Charde Marshall</td><td>Regional Director</td><td>San Francisco</td><td>36</td><td>2008/10/16</td><td>$470,600</td></tr><tr><td>Haley Kennedy</td><td>Senior Marketing Designer</td><td>London</td><td>43</td><td>2012/12/18</td><td>$313,500</td></tr><tr><td>Tatyana Fitzpatrick</td><td>Regional Director</td><td>London</td><td>19</td><td>2010/03/17</td><td>$385,750</td></tr><tr><td>Michael Silva</td><td>Marketing Designer</td><td>London</td><td>66</td><td>2012/11/27</td><td>$198,500</td></tr><tr><td>Paul Byrd</td><td>Chief Financial Officer (CFO)</td><td>New York</td><td>64</td><td>2010/06/09</td><td>$725,000</td></tr><tr><td>Gloria Little</td><td>Systems Administrator</td><td>New York</td><td>59</td><td>2009/04/10</td><td>$237,500</td></tr><tr><td>Bradley Greer</td><td>Software Engineer</td><td>London</td><td>41</td><td>2012/10/13</td><td>$132,000</td></tr><tr><td>Dai Rios</td><td>Personnel Lead</td><td>Edinburgh</td><td>35</td><td>2012/09/26</td><td>$217,500</td></tr><tr><td>Jenette Caldwell</td><td>Development Lead</td><td>New York</td><td>30</td><td>2011/09/03</td><td>$345,000</td></tr><tr><td>Yuri Berry</td><td>Chief Marketing Officer (CMO)</td><td>New York</td><td>40</td><td>2009/06/25</td><td>$675,000</td></tr><tr><td>Caesar Vance</td><td>Pre-Sales Support</td><td>New York</td><td>21</td><td>2011/12/12</td><td>$106,450</td></tr><tr><td>Doris Wilder</td><td>Sales Assistant</td><td>Sidney</td><td>23</td><td>2010/09/20</td><td>$85,600</td></tr><tr><td>Angelica Ramos</td><td>Chief Executive Officer (CEO)</td><td>London</td><td>47</td><td>2009/10/09</td><td>$1,200,000</td></tr><tr><td>Gavin Joyce</td><td>Developer</td><td>Edinburgh</td><td>42</td><td>2010/12/22</td><td>$92,575</td></tr><tr><td>Jennifer Chang</td><td>Regional Director</td><td>Singapore</td><td>28</td><td>2010/11/14</td><td>$357,650</td></tr><tr><td>Brenden Wagner</td><td>Software Engineer</td><td>San Francisco</td><td>28</td><td>2011/06/07</td><td>$206,850</td></tr><tr><td>Fiona Green</td><td>Chief Operating Officer (COO)</td><td>San Francisco</td><td>48</td><td>2010/03/11</td><td>$850,000</td></tr><tr><td>Shou Itou</td><td>Regional Marketing</td><td>Tokyo</td><td>20</td><td>2011/08/14</td><td>$163,000</td></tr><tr><td>Michelle House</td><td>Integration Specialist</td><td>Sidney</td><td>37</td><td>2011/06/02</td><td>$95,400</td></tr><tr><td>Suki Burks</td><td>Developer</td><td>London</td><td>53</td><td>2009/10/22</td><td>$114,500</td></tr><tr><td>Prescott Bartlett</td><td>Technical Author</td><td>London</td><td>27</td><td>2011/05/07</td><td>$145,000</td></tr><tr><td>Gavin Cortez</td><td>Team Leader</td><td>San Francisco</td><td>22</td><td>2008/10/26</td><td>$235,500</td></tr><tr><td>Martena Mccray</td><td>Post-Sales support</td><td>Edinburgh</td><td>46</td><td>2011/03/09</td><td>$324,050</td></tr><tr><td>Unity Butler</td><td>Marketing Designer</td><td>San Francisco</td><td>47</td><td>2009/12/09</td><td>$85,675</td></tr><tr><td>Howard Hatfield</td><td>Office Manager</td><td>San Francisco</td><td>51</td><td>2008/12/16</td><td>$164,500</td></tr><tr><td>Hope Fuentes</td><td>Secretary</td><td>San Francisco</td><td>41</td><td>2010/02/12</td><td>$109,850</td></tr><tr><td>Vivian Harrell</td><td>Financial Controller</td><td>San Francisco</td><td>62</td><td>2009/02/14</td><td>$452,500</td></tr><tr><td>Timothy Mooney</td><td>Office Manager</td><td>London</td><td>37</td><td>2008/12/11</td><td>$136,200</td></tr><tr><td>Jackson Bradshaw</td><td>Director</td><td>New York</td><td>65</td><td>2008/09/26</td><td>$645,750</td></tr><tr><td>Olivia Liang</td><td>Support Engineer</td><td>Singapore</td><td>64</td><td>2011/02/03</td><td>$234,500</td></tr><tr><td>Bruno Nash</td><td>Software Engineer</td><td>London</td><td>38</td><td>2011/05/03</td><td>$163,500</td></tr><tr><td>Sakura Yamamoto</td><td>Support Engineer</td><td>Tokyo</td><td>37</td><td>2009/08/19</td><td>$139,575</td></tr><tr><td>Thor Walton</td><td>Developer</td><td>New York</td><td>61</td><td>2013/08/11</td><td>$98,540</td></tr><tr><td>Finn Camacho</td><td>Support Engineer</td><td>San Francisco</td><td>47</td><td>2009/07/07</td><td>$87,500</td></tr><tr><td>Serge Baldwin</td><td>Data Coordinator</td><td>Singapore</td><td>64</td><td>2012/04/09</td><td>$138,575</td></tr><tr><td>Zenaida Frank</td><td>Software Engineer</td><td>New York</td><td>63</td><td>2010/01/04</td><td>$125,250</td></tr><tr><td>Zorita Serrano</td><td>Software Engineer</td><td>San Francisco</td><td>56</td><td>2012/06/01</td><td>$115,000</td></tr><tr><td>Jennifer Acosta</td><td>Junior Javascript Developer</td><td>Edinburgh</td><td>43</td><td>2013/02/01</td><td>$75,650</td></tr><tr><td>Cara Stevens</td><td>Sales Assistant</td><td>New York</td><td>46</td><td>2011/12/06</td><td>$145,600</td></tr><tr><td>Hermione Butler</td><td>Regional Director</td><td>London</td><td>47</td><td>2011/03/21</td><td>$356,250</td></tr><tr><td>Lael Greer</td><td>Systems Administrator</td><td>London</td><td>21</td><td>2009/02/27</td><td>$103,500</td></tr><tr><td>Jonas Alexander</td><td>Developer</td><td>San Francisco</td><td>30</td><td>2010/07/14</td><td>$86,500</td></tr><tr><td>Shad Decker</td><td>Regional Director</td><td>Edinburgh</td><td>51</td><td>2008/11/13</td><td>$183,000</td></tr><tr><td>Michael Bruce</td><td>Javascript Developer</td><td>Singapore</td><td>29</td><td>2011/06/27</td><td>$183,000</td></tr><tr><td>Donna Snider</td><td>Customer Support</td><td>New York</td><td>27</td><td>2011/01/25</td><td>$112,000</td></tr></tbody><tfoot><tr><th>Name</th><th>Position</th><th>Office</th><th>Age</th><th>Start date</th><th>Salary</th></tr></tfoot></table>\\n</div></div>\"","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatPaginator, MatSort } from '@angular/material';\nimport { DataTableDataSource } from './data-table-datasource';\n\n@Component({\n  selector: 'data-table',\n  templateUrl: './data-table.component.html',\n  styleUrls: ['./data-table.component.css']\n})\nexport class DataTableComponent implements OnInit {\n  @ViewChild(MatPaginator) paginator: MatPaginator;\n  @ViewChild(MatSort) sort: MatSort;\n  dataSource: DataTableDataSource;\n\n  /** Columns displayed in the table. Columns IDs can be added, removed, or reordered. */\n  displayedColumns = ['id', 'name'];\n\n  ngOnInit() {\n    this.dataSource = new DataTableDataSource(this.paginator, this.sort);\n  }\n}\n","import { Injectable } from '@angular/core';\r\nimport { Router, CanActivate } from '@angular/router';\r\nimport { AuthService } from '../services/auth.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n  constructor (private authService:AuthService, private router:Router){\r\n\r\n  }\r\n\r\n  canActivate() {\r\n    if (this.authService.loggedIn()) {\r\n      return true;\r\n    } else {\r\n      this.router.navigate(['/login']);\r\n      return false;\r\n    }\r\n  }\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {CanActivate, ActivatedRouteSnapshot, Router} from '@angular/router';\r\nimport {AuthService} from '../services/auth.service';\r\n\r\n\r\n@Injectable()\r\nexport class LoginGuard implements CanActivate {\r\n    constructor(private authService: AuthService, private router: Router) {\r\n\r\n    }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot): boolean {\r\n        if (!this.authService.loggedIn()) {\r\n            return true;\r\n        }\r\n        this.router.navigate(['/page-not-found']);\r\n        return false;\r\n    }\r\n\r\n\r\n}\r\n","import {Injectable} from '@angular/core';\r\nimport {Router, CanActivate, ActivatedRouteSnapshot} from '@angular/router';\r\nimport {AuthService} from '../services/auth.service';\r\n\r\n\r\n@Injectable()\r\nexport class RoleGuard implements CanActivate {\r\n    constructor(private authService: AuthService, private router: Router) {\r\n\r\n    }\r\n\r\n    canActivate(route: ActivatedRouteSnapshot): boolean {\r\n        const expectedRole = route.data.expectedRole;\r\n        if (!this.authService.loggedIn()) {\r\n            this.router.navigate(['/login']);\r\n            return false;\r\n        } else if (this.authService.getUserType() !== expectedRole) {\r\n            this.router.navigate(['/page-not-found']);\r\n            return false;\r\n        }\r\n        return true;\r\n    }\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\nimport 'rxjs/add/operator/map';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AdminService {\n    authToken: any;\n    admin: any;\n\n    constructor(private http: HttpClient) {\n        // this.isDev = true;  // Change to false before deployment\n    }\n\n    registerAdmin(admin) {\n        let headers = new HttpHeaders(('Content-Type:application/json'));\n        return this.http.post('http://localhost:3000/admins/register', admin, {headers: headers});\n    }\n    authenticateAdmin(admin) {\n        let headers = new HttpHeaders(('Content-Type:application/json'));\n        return this.http.post('http://localhost:3000/admins/authenticate', admin, {headers: headers});\n    }\n\n    storeAdminData(token, admin) {\n        localStorage.setItem('id_token', token);\n        localStorage.setItem('user', JSON.stringify(admin));\n        this.authToken = token;\n        this.admin = admin;\n    }\n\n    getAdmins(){\n        return this.http.get('http://localhost:3000/admins/getAdmins');\n    }\n    deleteAdmin(id) {\n        return new Promise((resolve, reject) => {\n            this.http.delete('http://localhost:3000/admins/'+id)\n                .subscribe(res => {\n                    resolve(res);\n                }, (err) => {\n                    reject(err);\n                });\n        });\n    }\n    editAdmin(id, data) {\n        return new Promise((resolve, reject) => {\n            this.http.put(' http://localhost:3000/admins/'+id, data)\n                .map(res => res)\n                .subscribe(res => {\n                    resolve(res);\n                }, (err) => {\n                    reject(err);\n                });\n        });\n    }\n    getAdmin(id) {\n        return new Promise((resolve, reject) => {\n            this.http.get('http://localhost:3000/admins/' + id)\n                .map(res => res)\n                .subscribe(res => {\n                    resolve(res)\n                }, (err) => {\n                    reject(err);\n                });\n        });\n    }\n\n}\n","import {Injectable} from '@angular/core';\n\nimport 'rxjs/add/operator/map';\nimport {JwtHelperService} from '@auth0/angular-jwt';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {tokenGetter} from '../app.module';\n\n@Injectable()\nexport class AuthService {\n    authToken: any;\n    helper = new JwtHelperService();\n\n\n    constructor(private http: HttpClient) {\n    }\n\n    public isAuthenticated(): boolean {\n        const token = localStorage.getItem('token');\n        // Check whether the token is expired and return\n        // true or false\n        return !this.helper.isTokenExpired(token);\n    }\n\n    getProfile() {\n\n        this.loadToken();\n        const headers = new HttpHeaders({'Authorization': this.authToken, 'Content-Type': 'application/json'});\n        const userTypeToken = JSON.parse(localStorage.getItem('user'));\n        if (userTypeToken.type === 'mentor') {\n            return this.http.get('http://localhost:3000/mentor_subjects/profile', {headers: headers});\n        } else if (userTypeToken.type === 'student') {\n            return this.http.get('http://localhost:3000/students/profile', {headers: headers});\n        } else if (userTypeToken.type === 'admin') {\n            return this.http.get('http://localhost:3000/admins/dashboard', {headers: headers});\n        }\n\n    }\n\n    getUserType() {\n        const userTypeToken = JSON.parse(localStorage.getItem('user'));\n        if (userTypeToken !== null) {\n            return userTypeToken.type;\n        }\n        return null;\n    }\n\n\n    loadToken() {\n        const token = localStorage.getItem('id_token');\n        this.authToken = token;\n    }\n\n    loggedIn() {\n        const refreshToken = tokenGetter();\n        if (!this.helper.isTokenExpired(refreshToken)) {\n            return true;\n        }\n    }\n\n    logout() {\n        this.authToken = null;\n        localStorage.clear();\n    }\n}\n","import {Injectable} from '@angular/core';\nimport 'rxjs/add/operator/map';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LocalResService {\n    LocalRes: any;\n\n    constructor(private http: HttpClient) {\n    }\n\n    registerLocalRes(LocalRes) {\n        const headers = new HttpHeaders(('Content-Type:application/json'));\n        return this.http.post('http://localhost:3000/local-res/register', LocalRes, {headers: headers});\n    }\n\n    getLocalRess() {\n        return this.http.get('http://localhost:3000/local-res/getAll');\n    }\n\n    deleteLocalRes(id) {\n        return new Promise((resolve, reject) => {\n            this.http.delete('http://localhost:3000/local-res/' + id)\n                .subscribe(res => {\n                    resolve(res);\n                }, (err) => {\n                    reject(err);\n                });\n        });\n    }\n\n    editLocalRes(id, data) {\n        return new Promise((resolve, reject) => {\n            this.http.put(' http://localhost:3000/local-res/' + id, data)\n                .map(res => res)\n                .subscribe(res => {\n                    resolve(res);\n                }, (err) => {\n                    reject(err);\n                });\n        });\n    }\n\n    getLocalRes(id) {\n        return new Promise((resolve, reject) => {\n            this.http.get('http://localhost:3000/local-res/' + id)\n                .map(res => res)\n                .subscribe(res => {\n                    resolve(res);\n                }, (err) => {\n                    reject(err);\n                });\n        });\n    }\n\n\n    downloadFile(file: String) {\n        const body = {filename: file};\n\n        return this.http.post('http://localhost:3000/local-res/download', body, {\n            responseType: 'blob',\n            headers: new HttpHeaders().append('Content-Type', 'application/json')\n        });\n    }\n    deleteFile(file: String) {\n        const body = {filename: file};\n\n        return this.http.post('http://localhost:3000/local-res/deletefile', body, {\n            responseType: 'blob',\n            headers: new HttpHeaders().append('Content-Type', 'application/json')\n        });\n    }\n}\n","import {Injectable} from '@angular/core';\nimport 'rxjs/add/operator/map';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MentorSubjectService {\n    MentorSubject: any;\n\n    constructor(private http: HttpClient) {\n    }\n\n    registerMentorSubject(MentorSubject) {\n        const headers = new HttpHeaders(('Content-Type:application/json'));\n        return this.http.post('http://localhost:3000/mentor-subject/register', MentorSubject, {headers: headers});\n    }\n\n\n    getMentorSubjects(id) {\n        return this.http.get('http://localhost:3000/mentor-subject/getMentorSubjects/'+id);\n    }\n\n    getMentorSubjectsBySubjectId(id) {\n        return this.http.get('http://localhost:3000/mentor-subject/getMentorSubjectsBySubjectId/'+id);\n    }\n\n    getMentorBySubject() {\n        return this.http.get('http://localhost:3000/mentor-subject/getMentorsBySubject');\n    }\n\n    getMentorAllSubjects() {\n        return this.http.get('http://localhost:3000/mentor-subject/getMentorAllSubjects');\n    }\n    deleteMentorSubject(id) {\n        return new Promise((resolve, reject) => {\n            this.http.delete('http://localhost:3000/mentor-subject/' + id)\n                .subscribe(res => {\n                    resolve(res);\n                }, (err) => {\n                    reject(err);\n                });\n        });\n    }\n\n    editMentorSubject(id, data) {\n        return new Promise((resolve, reject) => {\n            this.http.put(' http://localhost:3000/mentor-subject/' + id, data)\n                .map(res => res)\n                .subscribe(res => {\n                    resolve(res);\n                }, (err) => {\n                    reject(err);\n                });\n        });\n    }\n\n    getMentorSubject(id) {\n        return new Promise((resolve, reject) => {\n            this.http.get('http://localhost:3000/mentor-subject/' + id)\n                .map(res => res)\n                .subscribe(res => {\n                    resolve(res);\n                }, (err) => {\n                    reject(err);\n                });\n        });\n    }\n}\n","import {Injectable} from '@angular/core';\nimport 'rxjs/add/operator/map';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MentorService {\n    mentor: any;\n    authToken: any;\n\n\n    constructor(private http: HttpClient) {\n        // this.isDev = true;  // Change to false before deployment\n    }\n\n    registerMentor(mentor) {\n        let headers = new HttpHeaders(('Content-Type:application/json'));\n        return this.http.post('http://localhost:3000/mentor_subjects/register', mentor, {headers: headers});\n    }\n    authenticateMentor(mentor) {\n        let headers = new HttpHeaders(('Content-Type:application/json'));\n        return this.http.post('http://localhost:3000/mentor_subjects/authenticate', mentor, {headers: headers});\n    }\n\n    storeMentorData(token, mentor) {\n        localStorage.setItem('id_token', token);\n        localStorage.setItem('user', JSON.stringify(mentor));\n        this.authToken = token;\n        this.mentor = mentor;\n    }\n\n\n    getMentors(){\n        return this.http.get('http://localhost:3000/mentor_subjects/getMentors');\n    }\n    deleteMentor(id) {\n        return new Promise((resolve, reject) => {\n            this.http.delete('http://localhost:3000/mentor_subjects/'+id)\n                .subscribe(res => {\n                    resolve(res);\n                }, (err) => {\n                    reject(err);\n                });\n        });\n    }\n    editMentor(id, data) {\n        return new Promise((resolve, reject) => {\n            this.http.put(' http://localhost:3000/mentor_subjects/'+id, data)\n                .map(res => res)\n                .subscribe(res => {\n                    resolve(res);\n                }, (err) => {\n                    reject(err);\n                });\n        });\n    }\n    getMentor(id) {\n        return new Promise((resolve, reject) => {\n            this.http.get('http://localhost:3000/mentor_subjects/'+id)\n                .map(res => res)\n                .subscribe(res => {\n                    resolve(res)\n                }, (err) => {\n                    reject(err);\n                });\n        });\n    }\n}\n\n","import {Injectable} from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport 'rxjs/add/operator/map';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class MentoringMeetingService {\n\n    constructor(private http: HttpClient) {\n    }\n\n    registerMentoringMeeting(MentoringMeeting) {\n        const headers = new HttpHeaders(('Content-Type:application/json'));\n        return this.http.post('http://localhost:3000/mentoring-meeting/register', MentoringMeeting, {headers: headers});\n    }\n\n    countMentoringMeetingById(id) {\n        return this.http.get('http://localhost:3000/mentoring-meeting/getMentoringMeetingCount/' + id);\n    }\n}\n","import {Injectable} from '@angular/core';\nimport 'rxjs/add/operator/map';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class OnlineResService {\n    OnlineRes: any;\n\n    constructor(private http: HttpClient) {\n    }\n\n    registerOnlineRes(OnlineRes) {\n        const headers = new HttpHeaders(('Content-Type:application/json'));\n        return this.http.post('http://localhost:3000/online-res/register', OnlineRes, {headers: headers});\n    }\n\n    getOnlineRess() {\n        return this.http.get('http://localhost:3000/online-res/getAll');\n    }\n\n    deleteOnlineRes(id) {\n        return new Promise((resolve, reject) => {\n            this.http.delete('http://localhost:3000/online-res/' + id)\n                .subscribe(res => {\n                    resolve(res);\n                }, (err) => {\n                    reject(err);\n                });\n        });\n    }\n\n    editOnlineRes(id, data) {\n        return new Promise((resolve, reject) => {\n            this.http.put(' http://localhost:3000/online-res/' + id, data)\n                .map(res => res)\n                .subscribe(res => {\n                    resolve(res);\n                }, (err) => {\n                    reject(err);\n                });\n        });\n    }\n\n    getOnlineRes(id) {\n        return new Promise((resolve, reject) => {\n            this.http.get('http://localhost:3000/online-res/' + id)\n                .map(res => res)\n                .subscribe(res => {\n                    resolve(res);\n                }, (err) => {\n                    reject(err);\n                });\n        });\n    }\n}\n","import {Injectable} from '@angular/core';\nimport 'rxjs/add/operator/map';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentSubjectService {\n    StudentSubject: any;\n\n    constructor(private http: HttpClient) {\n    }\n\n    registerStudentSubject(StudentSubject) {\n        const headers = new HttpHeaders(('Content-Type:application/json'));\n        return this.http.post('http://localhost:3000/student-subject/register', StudentSubject, {headers: headers});\n    }\n\n    getStudentSubjects(id) {\n        return this.http.get('http://localhost:3000/student-subject/getStudentSubjects'+id);\n    }\n    getStudentSubjectsById(id) {\n        return this.http.get('http://localhost:3000/student-subject/getStudentSubjectsById/'+id);\n    }\n    getStudentSubjectsByMentor(id) {\n        return this.http.get('http://localhost:3000/student-subject/getStudentSubjectsByMentor'+id);\n    }\n    getStudentSubjectsByStudentId(id) {\n        return this.http.get('http://localhost:3000/student-subject/getStudentSubjectsByStudentId'+id);\n    }\n    getStudentSubjectsByMentorId(id) {\n        return this.http.get('http://localhost:3000/student-subject/getStudentSubjectsByMentorId'+id);\n    }\n    getUnassignedStudentSubjects() {\n        return this.http.get('http://localhost:3000/student-subject/getUnassignedStudentSubjects');\n    }\n\n    deleteStudentSubject(id) {\n        return new Promise((resolve, reject) => {\n            this.http.delete('http://localhost:3000/student-subject/' + id)\n                .subscribe(res => {\n                    resolve(res);\n                }, (err) => {\n                    reject(err);\n                });\n        });\n    }\n\n    editStudentSubject(id, data) {\n        return new Promise((resolve, reject) => {\n            this.http.put(' http://localhost:3000/student-subject/' + id, data)\n                .map(res => res)\n                .subscribe(res => {\n                    resolve(res);\n                }, (err) => {\n                    reject(err);\n                });\n        });\n    }\n\n    getStudentSubject(id) {\n        return new Promise((resolve, reject) => {\n            this.http.get('http://localhost:3000/student-subject/' + id)\n                .map(res => res)\n                .subscribe(res => {\n                    resolve(res);\n                }, (err) => {\n                    reject(err);\n                });\n        });\n    }\n}\n","import {Injectable} from '@angular/core';\nimport 'rxjs/add/operator/map';\nimport {HttpClient, HttpHeaders} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class StudentService {\n    student: any;\n    authToken: any;\n\n    constructor(private http: HttpClient) {\n        // this.isDev = true;  // Change to false before deployment\n    }\n    registerStudent(student) {\n        let headers = new HttpHeaders(('Content-Type:application/json'));\n        return this.http.post('http://localhost:3000/students/register', student, {headers: headers});\n    }\n    authenticateStudent(student) {\n        let headers = new HttpHeaders(('Content-Type:application/json'));\n        return this.http.post('http://localhost:3000/students/authenticate', student, {headers: headers});\n    }\n    storeStudentData(token, student) {\n        localStorage.setItem('id_token', token);\n        localStorage.setItem('user', JSON.stringify(student));\n        this.authToken = token;\n        this.student = student;\n    }\n\n    getStudents(){\n        return this.http.get('http://localhost:3000/students/getStudents');\n    }\n    deleteStudent(id) {\n        return new Promise((resolve, reject) => {\n            this.http.delete('http://localhost:3000/students/'+id)\n                .subscribe(res => {\n                    resolve(res);\n                }, (err) => {\n                    reject(err);\n                });\n        });\n    }\n    editStudent(id, data) {\n        return new Promise((resolve, reject) => {\n            this.http.put(' http://localhost:3000/students/'+id, data)\n                .map(res => res)\n                .subscribe(res => {\n                    resolve(res);\n                }, (err) => {\n                    reject(err);\n                });\n        });\n    }\n    getStudent(id) {\n        return new Promise((resolve, reject) => {\n            this.http.get('http://localhost:3000/students/'+id)\n                .map(res => res)\n                .subscribe(res => {\n                    resolve(res)\n                }, (err) => {\n                    reject(err);\n                });\n        });\n    }\n}\n","import { Injectable } from '@angular/core';\nimport 'rxjs/add/operator/map';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubjectService {\n  subject: any;\n\n  constructor(private http: HttpClient) { }\n\n    registerSubject(subject) {\n        let headers = new HttpHeaders(('Content-Type:application/json'));\n        return this.http.post('http://localhost:3000/subjects/register', subject, {headers: headers});\n    }\n\n    getSubjects(){\n        return this.http.get('http://localhost:3000/subjects/getSubjects');\n    }\n    deleteSubject(id) {\n        return new Promise((resolve, reject) => {\n            this.http.delete('http://localhost:3000/subjects/'+id)\n                .subscribe(res => {\n                    resolve(res);\n                }, (err) => {\n                    reject(err);\n                });\n        });\n    }\n    editSubject(id, data) {\n        return new Promise((resolve, reject) => {\n            this.http.put(' http://localhost:3000/subjects/'+id, data)\n                .map(res => res)\n                .subscribe(res => {\n                    resolve(res);\n                }, (err) => {\n                    reject(err);\n                });\n        });\n    }\n    getSubject(id) {\n        return new Promise((resolve, reject) => {\n            this.http.get('http://localhost:3000/subjects/' + id)\n                .map(res => res)\n                .subscribe(res => {\n                    resolve(res)\n                }, (err) => {\n                    reject(err);\n                });\n        });\n    }\n    \n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SurveyService {\n\n    constructor(private http: HttpClient) {\n    }\n\n    registerSurvey(Survey) {\n        const headers = new HttpHeaders(('Content-Type:application/json'));\n        return this.http.post('http://localhost:3000/survey/register', Survey, {headers: headers});\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class ValidateService {\n\n  constructor() { }\n\n  validateRegister(user) {\n    if(user.name == undefined || user.email == undefined  || user.password == undefined) {\n        return false;\n    } else {\n      return true;\n    }\n  }\n\n  validateEmail(email) {\n    const re = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(email);\n  }\n}\n","// The file contents for the current environment will overwrite these during build.\n// The build system defaults to the dev environment which uses `environment.ts`, but if you do\n// `ng build --env=prod` then `environment.prod.ts` will be used instead.\n// The list of which env maps to which file can be found in `.angular-cli.json`.\n\nexport const environment = {\n  production: false\n};\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}